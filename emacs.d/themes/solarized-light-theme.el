;;; solarized-light-theme.el --- A color theme
;;
;; Copyright (C) 2011 Greg Pfeil, Emacs adaptation.
;;
;; Adapted from Solarized by Ethan Schoonover
;;
;; Adapted from color-theme package specifications to emacs-24 theme.
;;
;; This file is NOT part of GNU Emacs.
;;
;; GNU Emacs is free software: you can redistribute it and/or modify
;; it under the terms of the GNU General Public License as published by
;; the Free Software Foundation, either version 3 of the License, or
;; (at your option) any later version.
;;
;; GNU Emacs is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU General Public License for more details.
;;
;; You should have received a copy of the GNU General Public License
;; along with GNU Emacs.  If not, see <http://www.gnu.org/licenses/>.
;;
;;; Code:

(deftheme solarized-light
  "Solarized light theme.")

(let ((base03  "#fdf6e3")
      (base02  "#eee8d5")
      (base01  "#93a1a1")
      (base00  "#839496")
      (base3   "#002b36")
      (base2   "#073642")
      (base1   "#586e75")
      (base0   "#657b83")
      (yellow  "#b58900")
      (orange  "#cb4b16")
      (red     "#dc322f")
      (magenta "#d33682")
      (violet  "#6c71c4")
      (blue    "#268bd2")
      (cyan    "#2aa198")
      (green   "#859900"))
  (custom-theme-set-faces
   'solarized-light
   `(default ((t (:foreground ,base0 :background ,base03))))
   '(bold ((t (:weight bold))))
   '(bold-italic ((t (:slant italic :weight bold))))
   '(border  ((t nil)))
   ; `(button  ((t (:foreground ,light-blue))))
   '(comint-highlight-input ((t (:italic t :bold t))))
   `(comint-highlight-prompt ((t (:foreground ,green))))
   '(completions-first-difference ((t (:inherit bold :background "red4" :foreground "yellow"))))
   `(cursor ((t (:foreground ,base0 :background ,base03 :inverse-video t))))
   `(custom-button ((t (:background ,base02 :box (:line-width 2 :style released-button)))))
   `(custom-button-mouse ((t (:inherit custom-button :foreground ,base1))))
   '(custom-button-pressed ((t (:inherit custom-button :foreground "white"))))
   '(custom-button-pressed-unraised ((t (:inherit custom-button-unraised))))
   '(custom-button-unraised ((t (:inherit underline))))
   '(custom-comment ((t (:background "gray85"))))
   `(custom-comment-tag ((t (:background ,base02))))
   `(custom-documentation ((t (:inherit default))))
   '(custom-face-tag ((t (:inherit custom-variable-tag))))
   `(custom-group-tag ((t (:foreground ,orange :bold t))))
   `(custom-link ((t (:foreground ,violet))))
   `(custom-state ((t (:foreground ,green))))
   '(custom-variable-button ((t (:underline t :weight bold))))
   `(custom-variable-tag ((t (:foreground ,orange :bold t))))
   '(custom-visibility ((t (:inherit link))))
   '(dired-directory ((t (:inherit font-lock-function-name-face))))
   `(diff-added ((t (:foreground ,green :inverse-video t))))
   `(diff-changed ((t (:foreground ,yellow :inverse-video t))))
   `(diff-removed ((t (:foreground ,red :inverse-video t))))
   '(diff-hunk-header ((t (:bold t))))
   `(diff-function ((t (:foreground ,orange))))
   '(diff-header ((t (:background "grey10"))))
   '(diff-file-header ((t (:background nil :foreground "white"))))
   '(dired-flagged ((t (:inherit font-lock-warning-face))))
   '(dired-header ((t (:inherit bold))))
   '(dired-ignored ((t (:inherit shadow))))
   '(dired-mark ((t (:inherit font-lock-constant-face))))
   '(dired-marked ((t (:inherit font-lock-constant-face))))
   '(dired-perm-write ((t (:inherit font-lock-warning-face))))
   '(dired-symlink ((t (:inherit font-lock-keyword-face :slant italic))))
   '(dired-warning ((t (:inherit font-lock-warning-face))))
   `(escape-glyph ((t (:foreground ,red))))
   '(fixed-pitch ((t (:height 0.9))))
   '(font-latex-bold-face ((t (:inherit bold))))
   '(font-latex-doctex-documentation-face ((t (:background "#333"))))
   '(font-latex-doctex-preprocessor-face ((t (:inherit (font-latex-doctex-documentation-face font-lock-preprocessor-face)))))
   '(font-latex-italic-face ((t (:inherit italic))))
   '(font-latex-math-face ((t (:inherit italic :foreground "#89E14B"))))
   '(font-latex-sectioning-5-face ((t (:inherit (bold font-lock-type-face variable-pitch)))))
   '(font-latex-slide-title-face ((t (:inherit font-latex-sectioning-2-face))))
   '(font-latex-string-face ((t (:inherit font-lock-string-face))))
   '(font-latex-verbatim-face ((t (:inherit fixed-pitch))))
   '(font-latex-warning-face ((t (:inherit font-lock-warning-face))))
   `(font-lock-builtin-face ((t (:foreground ,green))))
   '(font-lock-comment-delimiter-face ((t (:inherit font-lock-comment-face))))
   `(font-lock-comment-face ((t (:foreground ,base01 :italic t))))
   `(font-lock-constant-face ((t (:foreground ,cyan))))
   '(font-lock-doc-face ((t (:inherit italic :foreground "#96DEFA"))))
   `(font-lock-function-name-face ((t (:foreground ,blue)))); darkorange
   `(font-lock-keyword-face ((t (:foreground ,green))))
   '(font-lock-preprocessor-face ((t (:inherit (font-lock-builtin-face bold)))))
   '(font-lock-regexp-grouping-backslash ((t (:inherit bold :underline "red2"))))
   '(font-lock-regexp-grouping-construct ((t (:inherit font-lock-regexp-grouping-backslash))))
   `(font-lock-string-face ((t (:foreground ,cyan))))
   `(font-lock-type-face ((t (:foreground ,yellow))))
   `(font-lock-variable-name-face ((t (:foreground ,blue))))
   `(font-lock-warning-face ((t (:foreground ,red :bold t))))
   `(fringe ((t (:foreground ,base01 :background ,base02))))
   '(git-commit-summary-face ((t (:bold t))))
   `(git-commit-branch-face ((t (:foreground ,orange :bold t))))
   '(git-commit-nonempty-second-line-face ((t (:foreground "red"))))
   '(git-commit-comment-face ((t (:inherit font-lock-comment-face))))
   '(git-commit-known-pseudo-header-face ((t (:inherit gnus-header-name-face))))
   '(git-commit-pseudo-header-face ((t (:inherit gnus-header-content))))
   `(header-line ((t (:foreground ,base0 :background ,base2))))
   `(highlight ((t (:background ,base02))))
   '(highlight-current-line-face ((t (:inverse-video t))))
   '(hl-line ((t (:background "#191919"))))
   '(ibuffer-header-face ((t (:inherit (font-lock-type-face bold)))))
   `(info-xref ((t (:foreground ,blue :underline t))))
   `(info-xref-visited ((t (:inherit info-xref :foreground ,magenta))))
   `(isearch ((t (:foreground ,yellow :inverse-video t))))
   '(italic  ((t (:slant italic))))
   '(lazy-highlight ((t (:background "PaleTurquoise4"))))
   '(link ((t (:background "ivory3" :foreground "DodgerBlue4" :box (:line-width 1 :color "DodgerBlue4") :underline nil))))
   '(link-visited ((t (:inherit link :foreground "VioletRed2" :box (:line-width 1 :color "VioletRed2")))))
   '(match ((t (:background "light blue" :foreground "gray5"))))
   `(menu ((t (:foreground ,base0 :background ,base02))))
   `(minibuffer-prompt ((t (:foreground ,blue))))
   `(mode-line ((t (:foreground ,base1 :background ,base02 :box (:line-width 1 :color ,base1)))))
   `(mode-line-buffer-id ((t (:foreground ,base1))))
   '(mode-line-emphasis ((t (:inherit bold))))
   '(mode-line-highlight ((t (:inverse-video t))))
   `(mode-line-inactive ((t (:foreground ,base0  :background ,base02 :box (:line-width 1 :color ,base02)))))
   `(mode-line-buffer-id ((t (:bold t :foreground ,orange))))
   '(mouse ((t nil)))
   '(mumamo-background-chunk-major ((t (:background "gray5"))))
   '(mumamo-background-chunk-submode1 ((t (:background "gray5"))))
   '(mumamo-background-chunk-submode2 ((t (:background "gray5"))))
   '(mumamo-background-chunk-submode3 ((t (:background "gray5"))))
   '(mumamo-background-chunk-submode4 ((t (:background "gray5"))))
   '(nobreak-space ((t (:inherit escape-glyph :underline t))))
   `(org-hide ((t (:foreground ,base03))))
   '(org-level-1 ((t (:bold t :foreground "#4788cc" :height 1.2))))
   '(org-level-2 ((t (:bold t :foreground "#6ac214" :height 1.1))))
   '(org-level-3 ((t (:bold t :foreground "#edd400" :height 1.0))))
   '(org-level-4 ((t (:bold t :foreground "tomato" :height 1.0))))
   '(org-footnote  ((t (:underline t :foreground "magenta3"))))
   '(org-link ((t (:foreground "SkyBlue2"))))
   '(org-special-keyword ((t (:foreground "brown1"))))
   '(org-verbatim ((t (:foreground "#eeeeec" :underline t :slant italic))))
   '(org-block ((t (:foreground "#bbbbbc"))))
   '(org-quote ((t (:inherit org-block :slant italic))))
   '(org-verse ((t (:inherit org-block :slant italic))))
   `(org-todo ((t (:foreground ,red :bold t))))
   `(org-done ((t (:foreground ,green :bold t))))
   '(org-mode-line-clock ((t (:foreground "#cc77ff" :background nil))))
   '(org-date ((t (:underline nil :foreground "#edd466" :background nil))))
   '(org-agenda-date ((t (:underline nil :foreground "SkyBlue2" :height 1.2))))
   '(org-agenda-date-today ((t (:inherit org-agenda-date :foreground "#edd466" :weight bold))))
   '(org-agenda-date-telecommuting ((t (:inherit org-agenda-date :foreground "#ffbb22" :weight bold))))
   '(org-agenda-date-weekend ((t (:inherit org-agenda-date :foreground "brown3" :weight bold))))
   '(paren-face-match ((t (:inherit show-paren-match))))
   '(paren-face-mismatch ((t (:inherit show-paren-mismatch))))
   '(paren-face-no-match ((t (:inherit completions-first-difference))))
   '(proced-mark ((t (:inherit dired-mark))))
   '(proced-marked ((t (:inherit dired-marked))))
   '(proced-sort-header ((t (:inherit dired-header))))
   `(region ((t (:background ,base02))))
   '(scroll-bar ((t nil)))
   `(secondary-selection ((t (:background ,base02))))
   ; `(shadow ((t (:foreground ,shadow))))
   `(show-paren-match ((t (:background ,cyan :foreground ,base3))))
   `(show-paren-mismatch ((t (:background ,red :foreground ,base3))))
   '(tool-bar ((t nil)))
   '(tooltip ((t (:inherit variable-pitch :background "light yellow" :foreground "black"))))
   `(trailing-whitespace ((t (:foreground ,red :inverse-video t))))
   '(underline ((t (:underline t))))
   '(variable-pitch ((t (:family "Sans Serif"))))
   `(vertical-border ((t (:foreground ,base0))))
   '(widget-field ((t (:inherit italic :background "yellow3" :foreground "black"))))
   '(widget-single-line-field ((t (:inherit widget-field))))))

(provide-theme 'solarized-light)

;;; solarized-light-theme.el ends here
