
(interface ((xmlns:cd . "http://www.pragma-ade.com/commands") (name . "context")) (command ((name . "installlanguage")) (sequence nil (string ((value . "installlanguage")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (assignments ((list . "yes")) (parameter ((name . "spacing")) (constant ((type . "packed")) "") (constant ((type . "broad")) "")) (parameter ((name . "lefthyphenmin")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "righthyphenmin")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "state")) (constant ((type . "start")) "") (constant ((type . "stop")) "")) (parameter ((name . "leftsentence")) (constant ((type . "cd:command")) "")) (parameter ((name . "rightsentence")) (constant ((type . "cd:command")) "")) (parameter ((name . "leftsubsentence")) (constant ((type . "cd:command")) "")) (parameter ((name . "rightsubsentence")) (constant ((type . "cd:command")) "")) (parameter ((name . "leftquote")) (constant ((type . "cd:command")) "")) (parameter ((name . "rightquote")) (constant ((type . "cd:command")) "")) (parameter ((name . "leftquotation")) (constant ((type . "cd:command")) "")) (parameter ((name . "rightquotation")) (constant ((type . "cd:command")) "")) (parameter ((name . "default")) (constant ((type . "cd:name")) ""))))) (command ((name . "setuplanguage")) (sequence nil (string ((value . "setuplanguage")) "")) (arguments nil (keywords nil (constant ((type . "nl") (default . "yes")) "") (constant ((type . "fr")) "") (constant ((type . "en")) "") (constant ((type . "uk")) "") (constant ((type . "de")) "") (constant ((type . "es")) "") (constant ((type . "cz")) "") (constant ((type . "..")) "")) (assignments ((list . "yes")) (inherit ((name . "installlanguage")) "")))) (command ((name . "language")) (sequence nil (string ((value . "language")) "")) (arguments nil (keywords nil (constant ((type . "nl") (default . "yes")) "") (constant ((type . "fr")) "") (constant ((type . "en")) "") (constant ((type . "uk")) "") (constant ((type . "de")) "") (constant ((type . "es")) "") (constant ((type . "cz")) "") (constant ((type . "..")) "")))) (command ((name . "mainlanguage")) (sequence nil (string ((value . "mainlanguage")) "")) (arguments nil (keywords nil (constant ((type . "nl") (default . "yes")) "") (constant ((type . "fr")) "") (constant ((type . "en")) "") (constant ((type . "uk")) "") (constant ((type . "de")) "") (constant ((type . "es")) "") (constant ((type . "cz")) "") (constant ((type . "..")) "")))) (command ((name . "translate")) (sequence nil (string ((value . "translate")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "cd:name")) (constant ((type . "cd:text")) ""))))) (command ((name . "useencoding")) (sequence nil (string ((value . "useencoding")) "")) (arguments nil (keywords ((list . "yes")) (constant ((type . "cd:name")) "")))) (command ((name . "usespecials")) (sequence nil (string ((value . "usespecials")) "")) (arguments nil (keywords ((list . "yes")) (constant ((type . "reset")) "") (constant ((type . "cd:name")) "")))) (command ((name . "defineoutput")) (sequence nil (string ((value . "defineoutput")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (keywords ((list . "yes")) (constant ((type . "cd:name")) "")))) (command ((name . "setupoutput")) (sequence nil (string ((value . "setupoutput")) "")) (arguments nil (keywords ((list . "yes")) (constant ((type . "cd:name")) "")))) (command ((name . "definebodyfontenvironment")) (sequence nil (string ((value . "definebodyfontenvironment")) "")) (arguments nil (keywords nil (constant ((type . "5pt")) "") (constant ((type . "...")) "") (constant ((type . "12pt")) "") (constant ((type . "default")) "")) (assignments ((list . "yes")) (parameter ((name . "text")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "script")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "scriptscript")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "x")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "xx")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "small")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "big")) (constant ((type . "cd:dimension")) ""))))) (command ((name . "setupbodyfontenvironment")) (sequence nil (string ((value . "setupbodyfontenvironment")) "")) (arguments nil (keywords nil (inherit ((name . "setupbodyfont")) "")) (assignments ((list . "yes")) (inherit ((name . "setupbodyfont")) "")))) (command ((name . "showbodyfontenvironment")) (sequence nil (string ((value . "showbodyfontenvironment")) "")) (arguments nil (keywords ((list . "yes")) (inherit ((name . "setupbodyfont")) "")))) (command ((name . "definebodyfont")) (sequence nil (string ((value . "definebodyfont")) "")) (arguments nil (keywords ((list . "yes")) (constant ((type . "5pt")) "") (constant ((type . "...")) "") (constant ((type . "12pt")) "") (constant ((type . "default")) "")) (keywords nil (constant ((type . "rm")) "") (constant ((type . "ss")) "") (constant ((type . "tt")) "") (constant ((type . "mm")) "") (constant ((type . "hw")) "") (constant ((type . "cg")) "")) (assignments ((list . "yes")) (parameter ((name . "tf")) (constant ((type . "cd:file")) "")) (parameter ((name . "bf")) (constant ((type . "cd:file")) "")) (parameter ((name . "sl")) (constant ((type . "cd:file")) "")) (parameter ((name . "it")) (constant ((type . "cd:file")) "")) (parameter ((name . "bs")) (constant ((type . "cd:file")) "")) (parameter ((name . "bi")) (constant ((type . "cd:file")) "")) (parameter ((name . "sc")) (constant ((type . "cd:file")) "")) (parameter ((name . "ex")) (constant ((type . "cd:file")) "")) (parameter ((name . "mi")) (constant ((type . "cd:file")) "")) (parameter ((name . "sy")) (constant ((type . "cd:file")) "")) (parameter ((name . "ma")) (constant ((type . "cd:file")) "")) (parameter ((name . "mb")) (constant ((type . "cd:file")) "")) (parameter ((name . "mc")) (constant ((type . "cd:file")) ""))))) (command ((name . "showbodyfont")) (sequence nil (string ((value . "showbodyfont")) "")) (arguments nil (keywords ((list . "yes")) (inherit ((name . "setupbodyfont")) "")))) (command ((name . "setupbodyfont")) (sequence nil (string ((value . "setupbodyfont")) "")) (arguments nil (keywords ((list . "yes")) (constant ((type . "cd:name")) "") (constant ((type . "serif")) "") (constant ((type . "regular")) "") (constant ((type . "roman")) "") (constant ((type . "sans")) "") (constant ((type . "support")) "") (constant ((type . "sansserif")) "") (constant ((type . "mono")) "") (constant ((type . "type")) "") (constant ((type . "teletype")) "") (constant ((type . "handwritten")) "") (constant ((type . "calligraphic")) "") (constant ((type . "5pt")) "") (constant ((type . "...")) "") (constant ((type . "12pt")) "")))) (command ((name . "switchtobodyfont")) (sequence nil (string ((value . "switchtobodyfont")) "")) (arguments nil (keywords ((list . "yes")) (constant ((type . "5pt")) "") (constant ((type . "...")) "") (constant ((type . "12pt")) "") (constant ((type . "small")) "") (constant ((type . "big")) "") (constant ((type . "global")) "")))) (command ((name . "definefont")) (sequence nil (string ((value . "definefont")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (keywords nil (constant ((type . "cd:file")) "")))) (command ((name . "setupstrut")) (sequence nil (string ((value . "setupstrut")) "")) (arguments nil (keywords ((optional . "yes") (list . "yes")) (constant ((type . "yes") (default . "yes")) "") (constant ((type . "no")) "") (constant ((type . "cap")) "") (constant ((type . "cd:text")) "")))) (command ((name . "setupcolor")) (sequence nil (string ((value . "setupcolor")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")))) (command ((name . "setupcolors")) (sequence nil (string ((value . "setupcolors")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "state")) (constant ((type . "start")) "") (constant ((type . "stop")) "") (constant ((type . "global")) "") (constant ((type . "local")) "")) (parameter ((name . "conversion")) (constant ((type . "yes")) "") (constant ((type . "no")) "") (constant ((type . "always")) "")) (parameter ((name . "reduction")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "rgb")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "cmyk")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "mpcmyk")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "mpspot")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "textcolor")) (constant ((type . "cd:name")) "")) (parameter ((name . "split")) (constant ((type . "c")) "") (constant ((type . "m")) "") (constant ((type . "y")) "") (constant ((type . "k")) "") (constant ((type . "p")) "") (constant ((type . "s")) "") (constant ((type . "no")) "") (constant ((type . "cd:name")) "")) (parameter ((name . "criterium")) (constant ((type . "all")) "") (constant ((type . "none")) ""))))) (command ((name . "definecolor")) (sequence nil (string ((value . "definecolor")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (assignments ((list . "yes")) (parameter ((name . "r")) (constant ((type . "cd:text")) "")) (parameter ((name . "g")) (constant ((type . "cd:text")) "")) (parameter ((name . "b")) (constant ((type . "cd:text")) "")) (parameter ((name . "c")) (constant ((type . "cd:text")) "")) (parameter ((name . "m")) (constant ((type . "cd:text")) "")) (parameter ((name . "y")) (constant ((type . "cd:text")) "")) (parameter ((name . "k")) (constant ((type . "cd:text")) "")) (parameter ((name . "s")) (constant ((type . "cd:text")) ""))))) (command ((name . "color") (type . "environment")) (sequence nil (string ((value . "color")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")))) (command ((name . "color")) (sequence nil (string ((value . "color")) "")) (arguments nil (keywords nil (constant ((type . "cd:text")) "")) (content nil ""))) (command ((name . "graycolor")) (sequence nil (string ((value . "graycolor")) "")) (arguments nil (keywords nil (constant ((type . "cd:text")) "")))) (command ((name . "showcolor")) (sequence nil (string ((value . "showcolor")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")))) (command ((name . "definepalet")) (sequence nil (string ((value . "definepalet")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (assignments ((list . "yes")) (parameter ((name . "cd:name")) (constant ((type . "cd:name")) ""))))) (command ((name . "setuppalet")) (sequence nil (string ((value . "setuppalet")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")))) (command ((name . "definecolorgroup")) (sequence nil (string ((value . "definecolorgroup")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (keywords ((optional . "yes")) (constant ((type . "rgb") (default . "yes")) "") (constant ((type . "cmyk")) "") (constant ((type . "gray")) "") (constant ((type . "s")) "")) (triplet ((list . "yes")) ""))) (command ((name . "showpalet")) (sequence nil (string ((value . "showpalet")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (keywords ((list . "yes")) (constant ((type . "horizontal")) "") (constant ((type . "vertical")) "") (constant ((type . "name")) "") (constant ((type . "value")) "")))) (command ((name . "showcolorgroup")) (sequence nil (string ((value . "showcolorgroup")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (keywords ((list . "yes")) (constant ((type . "horizontal")) "") (constant ((type . "vertical")) "") (constant ((type . "name")) "") (constant ((type . "value")) "") (variable ((type . "cd:number")) "")))) (command ((name . "comparepalet")) (sequence nil (string ((value . "comparepalet")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")))) (command ((name . "comparecolorgroup")) (sequence nil (string ((value . "comparecolorgroup")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")))) (command ((name . "showmakeup")) (sequence nil (string ((value . "showmakeup")) ""))) (command ((name . "definetype")) (sequence nil (string ((value . "definetype")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (assignments ((list . "yes")) (inherit ((name . "setuptype")) "")))) (command ((name . "setuptype")) (sequence nil (string ((value . "setuptype")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "space")) (constant ((type . "on")) "") (constant ((type . "off")) "")) (parameter ((name . "option")) (constant ((type . "slanted")) "") (constant ((type . "normal")) "") (constant ((type . "none")) "")) (parameter ((name . "style")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "color")) (constant ((type . "cd:name")) ""))))) (command ((name . "type")) (sequence nil (string ((value . "type")) "")) (arguments nil (content nil ""))) (command ((name . "typ")) (sequence nil (string ((value . "typ")) "")) (arguments nil (content nil ""))) (command ((name . "tex")) (sequence nil (string ((value . "tex")) "")) (arguments nil (content nil ""))) (command ((name . "arg")) (sequence nil (string ((value . "arg")) "")) (arguments nil (content nil ""))) (command ((name . "definetyping")) (sequence nil (string ((value . "definetyping")) "")) (arguments nil (keywords nil (constant ((type . "file")) "") (constant ((type . "typing")) "") (constant ((type . "cd:name")) "")) (assignments ((list . "yes")) (inherit ((name . "setuptyping")) "")))) (command ((name . "setuptyping")) (sequence nil (string ((value . "setuptyping")) "")) (arguments nil (keywords ((optional . "yes")) (constant ((type . "file")) "") (constant ((type . "typing")) "") (constant ((type . "cd:name")) "")) (assignments ((list . "yes")) (parameter ((name . "space")) (constant ((type . "on")) "") (constant ((type . "off")) "")) (parameter ((name . "page")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "option")) (constant ((type . "slanted")) "") (constant ((type . "normal")) "") (constant ((type . "commands")) "") (constant ((type . "color")) "") (constant ((type . "none")) "")) (parameter ((name . "text")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "icommand")) (constant ((type . "cd:command")) "")) (parameter ((name . "vcommand")) (constant ((type . "cd:command")) "")) (parameter ((name . "ccommand")) (constant ((type . "cd:command")) "")) (parameter ((name . "before")) (constant ((type . "cd:command")) "")) (parameter ((name . "after")) (constant ((type . "cd:command")) "")) (parameter ((name . "margin")) (constant ((type . "cd:dimension")) "") (constant ((type . "standard")) "") (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "evenmargin")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "oddmargin")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "blank")) (constant ((type . "cd:dimension")) "") (constant ((type . "small")) "") (constant ((type . "medium")) "") (constant ((type . "big")) "") (constant ((type . "standard")) "") (constant ((type . "halfline")) "") (constant ((type . "line")) "")) (parameter ((name . "escape")) (constant ((type . "cd:character")) "")) (parameter ((name . "indentnext")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "style")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "color")) (constant ((type . "cd:name")) "")) (parameter ((name . "palet")) (constant ((type . "cd:name")) "")) (parameter ((name . "lines")) (constant ((type . "yes")) "") (constant ((type . "no")) "") (constant ((type . "hyphenated")) ""))))) (command ((name . "typing") (type . "environment") (generated . "yes")) (sequence nil (variable ((value . "typing")) ""))) (command ((name . "typefile")) (sequence nil (string ((value . "typefile")) "")) (arguments nil (keywords ((optional . "yes")) (constant ((type . "cd:name")) "")) (content nil ""))) (command ((name . "setupfootnotes")) (sequence nil (string ((value . "setupfootnotes")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "conversion")) (constant ((type . "numbers")) "") (constant ((type . "characters")) "") (constant ((type . "Characters")) "") (constant ((type . "romannumerals")) "") (constant ((type . "Romannumerals")) "")) (parameter ((name . "way")) (constant ((type . "bytext")) "") (constant ((type . "bycd:section")) "")) (parameter ((name . "location")) (constant ((type . "page")) "") (variable ((type . "cd:text")) "") (constant ((type . "columns")) "") (constant ((type . "high")) "") (constant ((type . "none")) "")) (parameter ((name . "rule")) (constant ((type . "on")) "") (constant ((type . "off")) "")) (parameter ((name . "before")) (constant ((type . "cd:command")) "")) (parameter ((name . "after")) (constant ((type . "cd:command")) "")) (parameter ((name . "width")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "height")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "bodyfont")) (constant ((type . "5pt")) "") (constant ((type . "...")) "") (constant ((type . "12pt")) "") (constant ((type . "small")) "") (constant ((type . "big")) "")) (parameter ((name . "style")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "distance")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "columndistance")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "margindistance")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "n")) (constant ((type . "cd:number")) "")) (parameter ((name . "numbercommand")) (constant ((type . "cd:oneargument")) "")) (parameter ((name . "split")) (constant ((type . "tolerant")) "") (constant ((type . "strict")) "") (constant ((type . "verystrict")) "") (constant ((type . "cd:number")) "")) (inherit ((name . "framed")) "")))) (command ((name . "setupfootnotedefinition")) (sequence nil (string ((value . "setupfootnotedefinition")) "")) (arguments nil (assignments ((list . "yes")) (inherit ((name . "definedescription")) "")))) (command ((name . "footnote")) (sequence nil (string ((value . "footnote")) "")) (arguments nil (reference ((optional . "yes")) "") (content nil ""))) (command ((name . "footnotetext")) (sequence nil (string ((value . "footnotetext")) "")) (arguments nil (reference ((optional . "yes")) "") (content nil ""))) (command ((name . "note")) (sequence nil (string ((value . "note")) "")) (arguments nil (reference ((interactive . "yes")) ""))) (command ((name . "localfootnotes") (type . "environment")) (sequence nil (string ((value . "localfootnotes")) ""))) (command ((name . "placelocalfootnotes")) (sequence nil (string ((value . "placelocalfootnotes")) "")) (arguments nil (assignments ((optional . "yes") (list . "yes")) (inherit ((name . "setupfootnotes")) "")))) (command ((name . "placefootnotes")) (sequence nil (string ((value . "placefootnotes")) "")) (arguments nil (assignments ((optional . "yes") (list . "yes")) (inherit ((name . "setupfootnotes")) "")))) (command ((name . "setupunderbar")) (sequence nil (string ((value . "setupunderbar")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "alternative")) (constant ((type . "a")) "") (constant ((type . "b")) "") (constant ((type . "c")) "")) (parameter ((name . "rulethickness")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "bottomoffset")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "topoffset")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "rulecolor")) (constant ((type . "cd:name")) ""))))) (command ((name . "underbar")) (sequence nil (string ((value . "underbar")) "")) (arguments nil (content nil ""))) (command ((name . "underbars")) (sequence nil (string ((value . "underbars")) "")) (arguments nil (word ((list . "yes")) ""))) (command ((name . "overbar")) (sequence nil (string ((value . "overbar")) "")) (arguments nil (content nil ""))) (command ((name . "overbars")) (sequence nil (string ((value . "overbars")) "")) (arguments nil (word ((list . "yes")) ""))) (command ((name . "overstrike")) (sequence nil (string ((value . "overstrike")) "")) (arguments nil (content nil ""))) (command ((name . "overstrikes")) (sequence nil (string ((value . "overstrikes")) "")) (arguments nil (word ((list . "yes")) ""))) (command ((name . "romannumerals")) (sequence nil (string ((value . "romannumerals")) "")) (arguments nil (content nil ""))) (command ((name . "Romannumerals")) (sequence nil (string ((value . "Romannumerals")) "")) (arguments nil (content nil ""))) (command ((name . "numbers")) (sequence nil (string ((value . "numbers")) "")) (arguments nil (content nil ""))) (command ((name . "character")) (sequence nil (string ((value . "character")) "")) (arguments nil (content nil ""))) (command ((name . "Character")) (sequence nil (string ((value . "Character")) "")) (arguments nil (content nil ""))) (command ((name . "characters")) (sequence nil (string ((value . "characters")) "")) (arguments nil (content nil ""))) (command ((name . "Characters")) (sequence nil (string ((value . "Characters")) "")) (arguments nil (content nil ""))) (command ((name . "mediaeval")) (sequence nil (string ((value . "mediaeval")) "")) (arguments nil (content nil ""))) (command ((name . "month")) (sequence nil (string ((value . "month")) "")) (arguments nil (content nil ""))) (command ((name . "MONTH")) (sequence nil (string ((value . "MONTH")) "")) (arguments nil (content nil ""))) (command ((name . "weekday")) (sequence nil (string ((value . "weekday")) "")) (arguments nil (content nil ""))) (command ((name . "WEEKDAY")) (sequence nil (string ((value . "WEEKDAY")) "")) (arguments nil (content nil ""))) (command ((name . "setupcapitals")) (sequence nil (string ((value . "setupcapitals")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "title")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "sc")) (constant ((type . "yes")) "") (constant ((type . "no")) ""))))) (command ((name . "kap")) (sequence nil (string ((value . "kap")) "")) (arguments nil (content nil ""))) (command ((name . "nocap")) (sequence nil (string ((value . "nocap")) "")) (arguments nil (content nil ""))) (command ((name . "CAP")) (sequence nil (string ((value . "CAP")) "")) (arguments nil (content nil ""))) (command ((name . "Cap")) (sequence nil (string ((value . "Cap")) "")) (arguments nil (content nil ""))) (command ((name . "Caps")) (sequence nil (string ((value . "Caps")) "")) (arguments nil (word ((list . "yes")) ""))) (command ((name . "WORD")) (sequence nil (string ((value . "WORD")) "")) (arguments nil (word nil ""))) (command ((name . "WORDS")) (sequence nil (string ((value . "WORDS")) "")) (arguments nil (word ((list . "yes")) ""))) (command ((name . "Word")) (sequence nil (string ((value . "Word")) "")) (arguments nil (word nil ""))) (command ((name . "Words")) (sequence nil (string ((value . "Words")) "")) (arguments nil (word ((list . "yes")) ""))) (command ((name . "stretched")) (sequence nil (string ((value . "stretched")) "")) (arguments nil (word nil ""))) (command ((name . "definesymbol")) (sequence nil (string ((value . "definesymbol")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (keywords nil (constant ((type . "cd:text")) "")))) (command ((name . "definefiguresymbol")) (sequence nil (string ((value . "definefiguresymbol")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (keywords nil (constant ((type . "cd:text")) "")) (assignments ((optional . "yes") (list . "yes")) (inherit ((name . "externalfigure")) "")))) (command ((name . "symbol")) (sequence nil (string ((value . "symbol")) "")) (arguments nil (keywords ((optional . "yes")) (constant ((type . "cd:name")) "")) (keywords nil (constant ((type . "cd:name")) "")))) (command ((name . "symbolset") (type . "environment")) (sequence nil (string ((value . "symbolset")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")))) (command ((name . "setupsymbolset")) (sequence nil (string ((value . "setupsymbolset")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")))) (command ((name . "usesymbols")) (sequence nil (string ((value . "usesymbols")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")))) (command ((name . "showsymbolset")) (sequence nil (string ((value . "showsymbolset")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")))) (command ((name . "defineconversion")) (sequence nil (string ((value . "defineconversion")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (keywords nil (constant ((type . "cd:command")) "") (constant ((type . "cd:text")) "")))) (command ((name . "convertnumber")) (sequence nil (string ((value . "convertnumber")) "")) (arguments nil (content nil "") (content nil ""))) (command ((name . "setupheadtext")) (sequence nil (string ((value . "setupheadtext")) "")) (arguments nil (keywords ((optional . "yes")) (constant ((type . "nl") (default . "yes")) "") (constant ((type . "fr")) "") (constant ((type . "en")) "") (constant ((type . "uk")) "") (constant ((type . "de")) "") (constant ((type . "es")) "") (constant ((type . "cz")) "") (constant ((type . "..")) "")) (assignments nil (parameter ((name . "cd:name")) (constant ((type . "cd:text")) ""))))) (command ((name . "setuplabeltext")) (sequence nil (string ((value . "setuplabeltext")) "")) (arguments nil (keywords ((optional . "yes")) (constant ((type . "nl") (default . "yes")) "") (constant ((type . "fr")) "") (constant ((type . "en")) "") (constant ((type . "uk")) "") (constant ((type . "de")) "") (constant ((type . "es")) "") (constant ((type . "cz")) "") (constant ((type . "..")) "")) (assignments nil (parameter ((name . "cd:name")) (constant ((type . "cd:text")) ""))))) (command ((name . "headtext")) (sequence nil (string ((value . "headtext")) "")) (arguments nil (content nil ""))) (command ((name . "labeltext")) (sequence nil (string ((value . "labeltext")) "")) (arguments nil (content nil ""))) (command ((name . "setupmarginrules")) (sequence nil (string ((value . "setupmarginrules")) "")) (arguments nil (assignments nil (parameter ((name . "level")) (constant ((type . "cd:number")) "")) (parameter ((name . "rulethickness")) (constant ((type . "cd:dimension")) ""))))) (command ((name . "marginrule") (type . "environment")) (sequence nil (string ((value . "marginrule")) "")) (arguments nil (keywords nil (constant ((type . "cd:number")) "")))) (command ((name . "marginrule")) (sequence nil (string ((value . "marginrule")) "")) (arguments nil (keywords nil (constant ((type . "cd:number")) "")) (content nil ""))) (command ((name . "setuplinewidth")) (sequence nil (string ((value . "setuplinewidth")) "")) (arguments nil (keywords nil (constant ((type . "cd:dimension")) "")))) (command ((name . "setupframed")) (sequence nil (string ((value . "setupframed")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "height")) (constant ((type . "fit")) "") (constant ((type . "broad")) "") (constant ((type . "cd:dimension")) "")) (parameter ((name . "width")) (constant ((type . "fit")) "") (constant ((type . "broad")) "") (constant ((type . "fixed")) "") (constant ((type . "cd:dimension")) "")) (parameter ((name . "offset")) (constant ((type . "none")) "") (constant ((type . "overlay")) "") (constant ((type . "default")) "") (constant ((type . "cd:dimension")) "")) (parameter ((name . "location")) (constant ((type . "low")) "") (constant ((type . "depth")) "") (constant ((type . "hanging")) "")) (parameter ((name . "option")) (constant ((type . "none")) "") (constant ((type . "empty")) "")) (parameter ((name . "strut")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "align")) (constant ((type . "no")) "") (constant ((type . "left")) "") (constant ((type . "right")) "") (constant ((type . "middle")) "") (constant ((type . "normal")) "") (constant ((type . "high")) "") (constant ((type . "low")) "") (constant ((type . "lohi")) "")) (parameter ((name . "bottom")) (constant ((type . "cd:command")) "")) (parameter ((name . "top")) (constant ((type . "cd:command")) "")) (parameter ((name . "frame")) (constant ((type . "on")) "") (constant ((type . "off")) "") (constant ((type . "none")) "") (constant ((type . "overlay")) "")) (parameter ((name . "topframe")) (constant ((type . "on")) "") (constant ((type . "off")) "")) (parameter ((name . "bottomframe")) (constant ((type . "on")) "") (constant ((type . "off")) "")) (parameter ((name . "leftframe")) (constant ((type . "on")) "") (constant ((type . "off")) "")) (parameter ((name . "rightframe")) (constant ((type . "on")) "") (constant ((type . "off")) "")) (parameter ((name . "frameoffset")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "framedepth")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "framecorner")) (constant ((type . "round")) "") (constant ((type . "rectangular")) "")) (parameter ((name . "frameradius")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "framecolor")) (constant ((type . "cd:name")) "")) (parameter ((name . "background")) (constant ((type . "screen")) "") (constant ((type . "color")) "") (constant ((type . "none")) "") (constant ((type . "foreground")) "") (constant ((type . "cd:name")) "")) (parameter ((name . "backgroundscreen")) (constant ((type . "cd:number")) "")) (parameter ((name . "backgroundcolor")) (constant ((type . "cd:name")) "")) (parameter ((name . "backgroundoffset")) (constant ((type . "frame")) "") (constant ((type . "cd:dimension")) "")) (parameter ((name . "backgrounddepth")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "backgroundcorner")) (constant ((type . "round")) "") (constant ((type . "rectangular")) "")) (parameter ((name . "backgroundradius")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "depth")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "corner")) (constant ((type . "round")) "") (constant ((type . "rectangular")) "")) (parameter ((name . "radius")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "empty")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "foregroundcolor")) (constant ((type . "cd:name")) "")) (parameter ((name . "foregroundstyle")) (constant ((type . "cd:name")) ""))))) (command ((name . "framed")) (sequence nil (string ((value . "framed")) "")) (arguments nil (assignments ((optional . "yes") (list . "yes")) (inherit ((name . "setupframed")) "")) (content nil ""))) (command ((name . "inframed")) (sequence nil (string ((value . "inframed")) "")) (arguments nil (assignments ((optional . "yes") (list . "yes")) (inherit ((name . "setupframed")) "")) (content nil ""))) (command ((name . "thinrules")) (sequence nil (string ((value . "thinrules")) "")) (arguments nil (assignments ((optional . "yes")) (inherit ((name . "setupthinrules")) "")))) (command ((name . "setupthinrules")) (sequence nil (string ((value . "setupthinrules")) "")) (arguments nil (assignments nil (parameter ((name . "interlinespace")) (constant ((type . "small")) "") (constant ((type . "medium")) "") (constant ((type . "big")) "")) (parameter ((name . "n")) (constant ((type . "cd:number")) "")) (parameter ((name . "before")) (constant ((type . "cd:command")) "")) (parameter ((name . "inbetween")) (constant ((type . "cd:command")) "")) (parameter ((name . "after")) (constant ((type . "cd:command")) "")) (parameter ((name . "color")) (constant ((type . "cd:name")) "")) (parameter ((name . "backgroundcolor")) (constant ((type . "cd:name")) "")) (parameter ((name . "height")) (constant ((type . "cd:dimension")) "") (constant ((type . "max")) "")) (parameter ((name . "depth")) (constant ((type . "cd:dimension")) "") (constant ((type . "max")) "")) (parameter ((name . "alternative")) (constant ((type . "a")) "") (constant ((type . "b")) "") (constant ((type . "c")) "") (constant ((type . "d")) "")) (parameter ((name . "rulethickness")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "color")) (constant ((type . "cd:name")) "")) (parameter ((name . "background")) (constant ((type . "color")) "")) (parameter ((name . "backgroundcolor")) (constant ((type . "cd:name")) ""))))) (command ((name . "hairline")) (sequence nil (string ((value . "hairline")) ""))) (command ((name . "thinrule")) (sequence nil (string ((value . "thinrule")) ""))) (command ((name . "defineframedtext")) (sequence nil (string ((value . "defineframedtext")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (assignments ((optional . "yes") (list . "yes")) (inherit ((name . "setupframedtexts")) "")))) (command ((name . "defineframed")) (sequence nil (string ((value . "defineframed")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (assignments ((optional . "yes") (list . "yes")) (inherit ((name . "setupframedtexts")) "")))) (command ((name . "setupframedtexts")) (sequence nil (string ((value . "setupframedtexts")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "bodyfont")) (constant ((type . "5pt")) "") (constant ((type . "...")) "") (constant ((type . "12pt")) "") (constant ((type . "small")) "") (constant ((type . "big")) "")) (parameter ((name . "style")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "left")) (constant ((type . "cd:command")) "")) (parameter ((name . "right")) (constant ((type . "cd:command")) "")) (parameter ((name . "before")) (constant ((type . "cd:command")) "")) (parameter ((name . "after")) (constant ((type . "cd:command")) "")) (parameter ((name . "inner")) (constant ((type . "cd:command")) "")) (parameter ((name . "linecorrection")) (constant ((type . "on")) "") (constant ((type . "off")) "")) (parameter ((name . "depthcorrection")) (constant ((type . "on")) "") (constant ((type . "off")) "")) (parameter ((name . "margin")) (constant ((type . "standard")) "") (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "location")) (constant ((type . "left")) "") (constant ((type . "right")) "") (constant ((type . "middle")) "") (constant ((type . "none")) "")) (inherit ((name . "setupframed")) "")))) (command ((name . "framedtext") (type . "environment") (generated . "yes")) (sequence nil (variable ((value . "framedtext")) "")) (arguments nil (keywords ((optional . "yes")) (constant ((type . "left")) "") (constant ((type . "right")) "") (constant ((type . "middle")) "") (constant ((type . "none")) "")) (assignments ((optional . "yes") (list . "yes")) (inherit ((name . "setupframedtexts")) "")))) (command ((name . "framedtext") (generated . "yes")) (sequence nil (variable ((value . "framedtext")) "")) (arguments nil (assignments ((optional . "yes") (list . "yes")) (inherit ((name . "setupframedtexts")) "")))) (command ((name . "background") (type . "environment")) (sequence nil (string ((value . "background")) ""))) (command ((name . "background")) (sequence nil (string ((value . "background")) ""))) (command ((name . "setupbackground")) (sequence nil (string ((value . "setupbackground")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "leftoffset")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "rightoffset")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "topoffset")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "bottomoffset")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "before")) (constant ((type . "cd:command")) "")) (parameter ((name . "after")) (constant ((type . "cd:command")) "")) (parameter ((name . "state")) (constant ((type . "start")) "") (constant ((type . "stop")) "")) (inherit ((name . "setupframed")) "")))) (command ((name . "fillinrules")) (sequence nil (string ((value . "fillinrules")) "")) (arguments nil (assignments ((optional . "yes") (list . "yes")) (inherit ((name . "setupfillinrules")) "")) (content nil "") (content ((optional . "yes")) ""))) (command ((name . "fillintext")) (sequence nil (string ((value . "fillintext")) "")) (arguments nil (assignments ((optional . "yes") (list . "yes")) (inherit ((name . "setupfillinrules")) "")) (content nil "") (content ((optional . "yes")) ""))) (command ((name . "setupfillinrules")) (sequence nil (string ((value . "setupfillinrules")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "width")) (constant ((type . "fit")) "") (constant ((type . "broad")) "") (constant ((type . "cd:dimension")) "")) (parameter ((name . "distance")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "before")) (constant ((type . "cd:command")) "")) (parameter ((name . "after")) (constant ((type . "cd:command")) "")) (parameter ((name . "style")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "n")) (constant ((type . "cd:number")) "")) (parameter ((name . "interlinespace")) (constant ((type . "small")) "") (constant ((type . "medium")) "") (constant ((type . "big")) "")) (parameter ((name . "separator")) (constant ((type . "cd:text")) ""))))) (command ((name . "fillinline")) (sequence nil (string ((value . "fillinline")) "")) (arguments nil (assignments ((optional . "yes") (list . "yes")) (inherit ((name . "setupfillinlines")) "")) (nothing nil ""))) (command ((name . "setupfillinlines")) (sequence nil (string ((value . "setupfillinlines")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "width")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "margin")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "distance")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "before")) (constant ((type . "cd:command")) "")) (parameter ((name . "after")) (constant ((type . "cd:command")) ""))))) (command ((name . "setuptextrules")) (sequence nil (string ((value . "setuptextrules")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "location")) (constant ((type . "left")) "") (constant ((type . "inmargin")) "")) (parameter ((name . "before")) (constant ((type . "cd:command")) "")) (parameter ((name . "after")) (constant ((type . "cd:command")) "")) (parameter ((name . "inbetween")) (constant ((type . "cd:command")) "")) (parameter ((name . "width")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "distance")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "bodyfont")) (constant ((type . "5pt")) "") (constant ((type . "...")) "") (constant ((type . "12pt")) "") (constant ((type . "small")) "") (constant ((type . "big")) "")) (parameter ((name . "color")) (constant ((type . "cd:name")) "")) (parameter ((name . "style")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "rulecolor")) (constant ((type . "cd:name")) ""))))) (command ((name . "textrule")) (sequence nil (string ((value . "textrule")) "")) (arguments nil (keywords ((optional . "yes")) (constant ((type . "top")) "") (constant ((type . "bottom")) "")) (content ((optional . "yes")) ""))) (command ((name . "textrule") (type . "environment")) (sequence nil (string ((value . "textrule")) "")) (arguments nil (keywords ((optional . "yes")) (constant ((type . "top")) "") (constant ((type . "bottom")) "")) (content ((optional . "yes")) ""))) (command ((name . "blackrule")) (sequence nil (string ((value . "blackrule")) "")) (arguments nil (assignments ((optional . "yes") (list . "yes")) (inherit ((name . "setupblackrules")) "")))) (command ((name . "blackrules")) (sequence nil (string ((value . "blackrules")) "")) (arguments nil (assignments ((list . "yes")) (inherit ((name . "setupblackrules")) "")))) (command ((name . "setupblackrules")) (sequence nil (string ((value . "setupblackrules")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "width")) (constant ((type . "cd:dimension")) "") (constant ((type . "max")) "")) (parameter ((name . "height")) (constant ((type . "cd:dimension")) "") (constant ((type . "max")) "")) (parameter ((name . "depth")) (constant ((type . "cd:dimension")) "") (constant ((type . "max")) "")) (parameter ((name . "alternative")) (constant ((type . "a")) "") (constant ((type . "b")) "")) (parameter ((name . "distance")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "n")) (constant ((type . "cd:number")) ""))))) (command ((name . "defineoverlay")) (sequence nil (string ((value . "defineoverlay")) "")) (arguments nil (keywords ((list . "yes")) (constant ((type . "cd:name")) "")) (keywords nil (constant ((type . "cd:command")) "")))) (command ((name . "usemodule")) (sequence nil (string ((value . "usemodule")) "")) (arguments nil (keywords ((list . "yes")) (constant ((type . "cd:name")) "")))) (command ((name . "reset")) (sequence nil (string ((value . "reset")) "")) (arguments nil (keywords ((list . "yes")) (constant ((type . "cd:name")) "")))) (command ((name . "donttest")) (sequence nil (string ((value . "donttest")) ""))) (command ((name . "localenvironment") (type . "environment")) (sequence nil (string ((value . "localenvironment")) ""))) (command ((name . "setupsystem")) (sequence nil (string ((value . "setupsystem")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "resolution")) (constant ((type . "cd:number")) "")) (parameter ((name . "file")) (constant ((type . "cd:text")) "")) (parameter ((name . "directory")) (constant ((type . "cd:text")) "")) (parameter ((name . "random")) (constant ((type . "normal")) "") (constant ((type . "small")) "") (constant ((type . "medium")) "") (constant ((type . "big")) "") (constant ((type . "cd:number")) ""))))) (command ((name . "usedirectory")) (sequence nil (string ((value . "usedirectory")) "")) (arguments nil (keywords ((list . "yes")) (constant ((type . "cd:name")) "") (constant ((type . "reset")) "")))) (command ((name . "low")) (sequence nil (string ((value . "low")) "")) (arguments nil (content nil ""))) (command ((name . "high")) (sequence nil (string ((value . "high")) "")) (arguments nil (content nil ""))) (command ((name . "lohi")) (sequence nil (string ((value . "lohi")) "")) (arguments nil (keywords ((optional . "yes")) (constant ((type . "low")) "")) (content nil "") (content nil ""))) (command ((name . "showframe")) (sequence nil (string ((value . "showframe")) "")) (arguments nil (keywords ((optional . "yes")) (variable ((type . "cd:text")) "") (constant ((type . "margin")) "") (constant ((type . "edge")) "")))) (command ((name . "leftaligned")) (sequence nil (string ((value . "leftaligned")) "")) (arguments nil (content nil ""))) (command ((name . "rightaligned")) (sequence nil (string ((value . "rightaligned")) "")) (arguments nil (content nil ""))) (command ((name . "midaligned")) (sequence nil (string ((value . "midaligned")) "")) (arguments nil (content nil ""))) (command ((name . "wordright")) (sequence nil (string ((value . "wordright")) "")) (arguments nil (content nil ""))) (command ((name . "inmargin")) (sequence nil (string ((value . "inmargin")) "")) (arguments nil (keywords ((optional . "yes")) (constant ((type . "+")) "") (constant ((type . "-")) "") (constant ((type . "low")) "")) (reference ((optional . "yes")) "") (content nil ""))) (command ((name . "inothermargin")) (sequence nil (string ((value . "inothermargin")) "")) (arguments nil (keywords ((optional . "yes")) (constant ((type . "+")) "") (constant ((type . "-")) "") (constant ((type . "low")) "")) (reference ((optional . "yes")) "") (content nil ""))) (command ((name . "inleft")) (sequence nil (string ((value . "inleft")) "")) (arguments nil (keywords ((optional . "yes")) (constant ((type . "+")) "") (constant ((type . "-")) "") (constant ((type . "low")) "")) (reference ((optional . "yes")) "") (content nil ""))) (command ((name . "inright")) (sequence nil (string ((value . "inright")) "")) (arguments nil (keywords ((optional . "yes")) (constant ((type . "+")) "") (constant ((type . "-")) "") (constant ((type . "low")) "")) (reference ((optional . "yes")) "") (content nil ""))) (command ((name . "column")) (sequence nil (string ((value . "column")) ""))) (command ((name . "showstruts")) (sequence nil (string ((value . "showstruts")) ""))) (command ((name . "showsetups")) (sequence nil (string ((value . "showsetups")) ""))) (command ((name . "showlayout")) (sequence nil (string ((value . "showlayout")) ""))) (command ((name . "margintext")) (sequence nil (string ((value . "margintext")) "")) (arguments nil (keywords ((optional . "yes")) (constant ((type . "+")) "") (constant ((type . "-")) "") (constant ((type . "low")) "")) (reference ((optional . "yes")) "") (content nil ""))) (command ((name . "setupmarginblocks")) (sequence nil (string ((value . "setupmarginblocks")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "location")) (constant ((type . "inmargin")) "") (constant ((type . "left")) "") (constant ((type . "middle")) "") (constant ((type . "right")) "")) (parameter ((name . "style")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "width")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "align")) (constant ((type . "left")) "") (constant ((type . "middle")) "") (constant ((type . "right")) "") (constant ((type . "no")) "")) (parameter ((name . "top")) (constant ((type . "cd:command")) "")) (parameter ((name . "inbetween")) (constant ((type . "cd:command")) "")) (parameter ((name . "bottom")) (constant ((type . "cd:command")) "")) (parameter ((name . "left")) (constant ((type . "cd:command")) "")) (parameter ((name . "right")) (constant ((type . "cd:command")) "")) (parameter ((name . "before")) (constant ((type . "cd:command")) "")) (parameter ((name . "after")) (constant ((type . "cd:command")) ""))))) (command ((name . "marginblock") (type . "environment")) (sequence nil (string ((value . "marginblock")) ""))) (command ((name . "part")) (sequence nil (string ((value . "part")) "")) (arguments nil (reference ((optional . "yes") (list . "yes")) "") (content nil ""))) (command ((name . "title")) (sequence nil (string ((value . "title")) "")) (arguments nil (reference ((optional . "yes") (list . "yes")) "") (content nil ""))) (command ((name . "chapter")) (sequence nil (string ((value . "chapter")) "")) (arguments nil (reference ((optional . "yes") (list . "yes")) "") (content nil ""))) (command ((name . "section")) (sequence nil (string ((value . "section")) "")) (arguments nil (reference ((optional . "yes") (list . "yes")) "") (content nil ""))) (command ((name . "subsection")) (sequence nil (string ((value . "subsection")) "")) (arguments nil (reference ((optional . "yes") (list . "yes")) "") (content nil ""))) (command ((name . "subsubsection")) (sequence nil (string ((value . "subsubsection")) "")) (arguments nil (reference ((optional . "yes") (list . "yes")) "") (content nil ""))) (command ((name . "subject")) (sequence nil (string ((value . "subject")) "")) (arguments nil (reference ((optional . "yes") (list . "yes")) "") (content nil ""))) (command ((name . "subsubject")) (sequence nil (string ((value . "subsubject")) "")) (arguments nil (reference ((optional . "yes") (list . "yes")) "") (content nil ""))) (command ((name . "subsubsubject")) (sequence nil (string ((value . "subsubsubject")) "")) (arguments nil (reference ((optional . "yes") (list . "yes")) "") (content nil ""))) (command ((name . "appendix")) (sequence nil (string ((value . "appendix")) "")) (arguments nil (reference ((optional . "yes") (list . "yes")) "") (content nil ""))) (command ((name . "in")) (sequence nil (string ((value . "in")) "")) (arguments nil (content ((interactive . "yes")) "") (content ((interactive . "yes")) "") (reference nil ""))) (command ((name . "at")) (sequence nil (string ((value . "at")) "")) (arguments nil (content ((interactive . "yes")) "") (content ((interactive . "yes")) "") (reference nil ""))) (command ((name . "about")) (sequence nil (string ((value . "about")) "")) (arguments nil (content ((interactive . "yes")) "") (reference nil ""))) (command ((name . "somewhere")) (sequence nil (string ((value . "somewhere")) "")) (arguments nil (content nil "") (content nil "") (reference nil ""))) (command ((name . "atpage")) (sequence nil (string ((value . "atpage")) "")) (arguments nil (reference nil ""))) (command ((name . "ref")) (sequence nil (string ((value . "ref")) "")) (arguments nil (keywords nil (constant ((type . "t")) "") (constant ((type . "p")) "") (constant ((type . "r")) "") (constant ((type . "s")) "") (constant ((type . "e")) "")) (reference nil ""))) (command ((name . "textreference")) (sequence nil (string ((value . "textreference")) "")) (arguments nil (reference nil "") (content nil ""))) (command ((name . "pagereference")) (sequence nil (string ((value . "pagereference")) "")) (arguments nil (reference nil ""))) (command ((name . "reference")) (sequence nil (string ((value . "reference")) "")) (arguments nil (reference nil "") (content nil ""))) (command ((name . "usereferences")) (sequence nil (string ((value . "usereferences")) "")) (arguments nil (keywords ((list . "yes")) (constant ((type . "cd:file")) "")))) (command ((name . "definereference")) (sequence nil (string ((value . "definereference")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (reference ((list . "yes")) ""))) (command ((name . "definereferenceformat")) (sequence nil (string ((value . "definereferenceformat")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (assignments ((list . "yes")) (parameter ((name . "left")) (constant ((type . "cd:text")) "")) (parameter ((name . "right")) (constant ((type . "cd:text")) "")) (parameter ((name . "text")) (constant ((type . "cd:text")) "")) (parameter ((name . "label")) (constant ((type . "cd:name")) ""))))) (command ((name . "hl")) (sequence nil (string ((value . "hl")) "")) (arguments nil (keywords nil (constant ((type . "cd:number")) "")))) (command ((name . "vl")) (sequence nil (string ((value . "vl")) "")) (arguments nil (keywords nil (constant ((type . "cd:number")) "")))) (command ((name . "godown")) (sequence nil (string ((value . "godown")) "")) (arguments nil (keywords nil (constant ((type . "cd:dimension")) "")))) (command ((name . "whitespace")) (sequence nil (string ((value . "whitespace")) ""))) (command ((name . "nowhitespace")) (sequence nil (string ((value . "nowhitespace")) ""))) (command ((name . "crlf")) (sequence nil (string ((value . "crlf")) ""))) (command ((name . "space")) (sequence nil (string ((value . "space")) ""))) (command ((name . "fixedspaces")) (sequence nil (string ((value . "fixedspaces")) ""))) (command ((name . "emptylines")) (sequence nil (string ((value . "emptylines")) "")) (arguments nil (keywords nil (constant ((type . "cd:number")) "")))) (command ((name . "nospace")) (sequence nil (string ((value . "nospace")) ""))) (command ((name . "packed")) (sequence nil (string ((value . "packed")) ""))) (command ((name . "redo")) (sequence nil (string ((value . "redo")) "")) (arguments nil (keywords nil (constant ((type . "cd:text")) "")))) (command ((name . "setupdescriptions")) (sequence nil (string ((value . "setupdescriptions")) "")) (arguments nil (keywords ((optional . "yes") (list . "yes")) (constant ((type . "cd:name")) "")) (assignments ((list . "yes")) (parameter ((name . "headstyle")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "style")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "color")) (constant ((type . "cd:name")) "")) (parameter ((name . "width")) (constant ((type . "fit")) "") (constant ((type . "broad")) "") (constant ((type . "cd:dimension")) "")) (parameter ((name . "distance")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "sample")) (constant ((type . "cd:text")) "")) (parameter ((name . "text")) (constant ((type . "cd:text")) "")) (parameter ((name . "align")) (constant ((type . "left")) "") (constant ((type . "middle")) "") (constant ((type . "right")) "")) (parameter ((name . "margin")) (constant ((type . "standard")) "") (constant ((type . "yes")) "") (constant ((type . "no")) "") (constant ((type . "cd:dimension")) "")) (parameter ((name . "location")) (constant ((type . "left")) "") (constant ((type . "right")) "") (constant ((type . "top")) "") (constant ((type . "serried")) "") (constant ((type . "inmargin")) "") (constant ((type . "inleft")) "") (constant ((type . "inright")) "") (constant ((type . "hanging")) "")) (parameter ((name . "hang")) (constant ((type . "fit")) "") (constant ((type . "broad")) "") (constant ((type . "cd:number")) "")) (parameter ((name . "before")) (constant ((type . "cd:command")) "")) (parameter ((name . "inbetween")) (constant ((type . "cd:command")) "")) (parameter ((name . "after")) (constant ((type . "cd:command")) "")) (parameter ((name . "indentnext")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "indenting")) (constant ((type . "never")) "") (constant ((type . "not")) "") (constant ((type . "no")) "") (constant ((type . "yes")) "") (constant ((type . "always")) "") (constant ((type . "first")) "") (constant ((type . "next")) ""))))) (command ((name . "setupenumerations")) (sequence nil (string ((value . "setupenumerations")) "")) (arguments nil (keywords ((optional . "yes") (list . "yes")) (constant ((type . "cd:name")) "")) (assignments ((list . "yes")) (inherit ((name . "definedescription")) "")))) (command ((name . "defineenumeration")) (sequence nil (string ((value . "defineenumeration")) "")) (arguments nil (keywords ((list . "yes")) (constant ((type . "cd:name")) "")) (keywords ((optional . "yes")) (constant ((type . "cd:name")) "")) (assignments ((optional . "yes") (list . "yes")) (inherit ((name . "setupenumerations")) "")))) (command ((name . "enumeration") (generated . "yes")) (sequence nil (variable ((value . "enumeration")) "")) (arguments nil (nothing ((interactive . "yes")) ""))) (command ((name . "enumeration") (type . "environment") (generated . "yes")) (sequence nil (variable ((value . "enumeration")) ""))) (command ((name . "definedescription")) (sequence nil (string ((value . "definedescription")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (assignments ((optional . "yes") (list . "yes")) (inherit ((name . "setupdescriptions")) "")))) (command ((name . "description") (generated . "yes")) (sequence nil (variable ((value . "description")) "")) (arguments nil (content nil "") (nothing nil ""))) (command ((name . "description") (type . "environment") (generated . "yes")) (sequence nil (variable ((value . "description")) "")) (arguments nil (content nil ""))) (command ((name . "setupindentations")) (sequence nil (string ((value . "setupindentations")) "")) (arguments nil (keywords ((optional . "yes") (list . "yes")) (constant ((type . "cd:name")) "")) (assignments ((list . "yes")) (parameter ((name . "style")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "headstyle")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "width")) (constant ((type . "fit")) "") (constant ((type . "cd:dimension")) "")) (parameter ((name . "text")) (constant ((type . "cd:text")) "")) (parameter ((name . "sample")) (constant ((type . "cd:text")) "")) (parameter ((name . "before")) (constant ((type . "cd:command")) "")) (parameter ((name . "after")) (constant ((type . "cd:command")) "")) (parameter ((name . "distance")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "separator")) (constant ((type . "cd:text")) ""))))) (command ((name . "defineindenting")) (sequence nil (string ((value . "defineindenting")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (assignments ((list . "yes")) (inherit ((name . "setupindentations")) "")))) (command ((name . "indentation") (generated . "yes")) (sequence nil (variable ((value . "indentation")) "")) (arguments nil (nothing nil ""))) (command ((name . "definelabel")) (sequence nil (string ((value . "definelabel")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (assignments ((list . "yes")) (parameter ((name . "text")) (constant ((type . "cd:text")) "")) (parameter ((name . "location")) (constant ((type . "inmargin")) "") (constant ((type . "intext")) "")) (parameter ((name . "way")) (constant ((type . "bytext")) "") (constant ((type . "bycd:section")) "")) (parameter ((name . "blockway")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "headstyle")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "headcolor")) (constant ((type . "cd:name")) "")) (parameter ((name . "before")) (constant ((type . "cd:command")) "")) (parameter ((name . "after")) (constant ((type . "cd:command")) ""))))) (command ((name . "labeling") (generated . "yes")) (sequence nil (variable ((value . "labeling")) "")) (arguments nil (reference ((optional . "yes")) ""))) (command ((name . "setupcolumns")) (sequence nil (string ((value . "setupcolumns")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "n")) (constant ((type . "cd:number")) "")) (parameter ((name . "ntop")) (constant ((type . "cd:number")) "")) (parameter ((name . "rule")) (constant ((type . "on")) "") (constant ((type . "off")) "")) (parameter ((name . "height")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "tolerance")) (constant ((type . "verystrict")) "") (constant ((type . "strict")) "") (constant ((type . "tolerant")) "") (constant ((type . "verytolerant")) "") (constant ((type . "stretch")) "")) (parameter ((name . "distance")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "balance")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "align")) (constant ((type . "yes")) "") (constant ((type . "no")) "") (variable ((type . "cd:text")) "")) (parameter ((name . "blank")) (constant ((type . "fixed")) "") (constant ((type . "halfline")) "") (constant ((type . "line")) "") (constant ((type . "flexible")) "") (constant ((type . "big")) "") (constant ((type . "medium")) "") (constant ((type . "small")) "")) (parameter ((name . "option")) (constant ((type . "background")) "")) (parameter ((name . "direction")) (constant ((type . "left")) "") (constant ((type . "right")) "")) (inherit ((name . "setupframed")) "")))) (command ((name . "columns") (type . "environment")) (sequence nil (string ((value . "columns")) "")) (arguments nil (assignments ((optional . "yes") (list . "yes")) (inherit ((name . "setupcolumns")) "")))) (command ((name . "definetext")) (sequence nil (string ((value . "definetext")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (keywords nil (constant ((type . "header")) "") (constant ((type . "footer")) "")) (keywords nil (constant ((type . "cd:text")) "")) (keywords ((optional . "yes")) (constant ((type . "cd:text")) "")) (keywords ((optional . "yes")) (constant ((type . "cd:text")) "")))) (command ((name . "setupheader")) (sequence nil (string ((value . "setupheader")) "")) (arguments nil (keywords ((optional . "yes")) (variable ((type . "cd:text") (default . "yes")) "") (constant ((type . "margin")) "") (constant ((type . "edge")) "")) (assignments ((list . "yes")) (parameter ((name . "state")) (constant ((type . "normal")) "") (constant ((type . "stop")) "") (constant ((type . "start")) "") (constant ((type . "empty")) "") (constant ((type . "high")) "") (constant ((type . "none")) "") (constant ((type . "nomarking")) "") (constant ((type . "cd:name")) "")) (parameter ((name . "strut")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "style")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "leftstyle")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "rightstyle")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "leftwidth")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "rightwidth")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "before")) (constant ((type . "cd:command")) "")) (parameter ((name . "after")) (constant ((type . "cd:command")) ""))))) (command ((name . "setupfooter")) (sequence nil (string ((value . "setupfooter")) "")) (arguments nil (keywords ((optional . "yes")) (inherit ((name . "setupheader")) "")) (assignments ((list . "yes")) (inherit ((name . "setupheader")) "")))) (command ((name . "setuptext")) (sequence nil (string ((value . "setuptext")) "")) (arguments nil (keywords ((optional . "yes")) (inherit ((name . "setupheader")) "")) (assignments ((list . "yes")) (inherit ((name . "setupheader")) "")))) (command ((name . "setuptop")) (sequence nil (string ((value . "setuptop")) "")) (arguments nil (keywords ((optional . "yes")) (inherit ((name . "setupheader")) "")) (assignments ((list . "yes")) (inherit ((name . "setupheader")) "")))) (command ((name . "setupbottom")) (sequence nil (string ((value . "setupbottom")) "")) (arguments nil (keywords ((optional . "yes")) (inherit ((name . "setupheader")) "")) (assignments ((list . "yes")) (inherit ((name . "setupheader")) "")))) (command ((name . "noheaderandfooterlines")) (sequence nil (string ((value . "noheaderandfooterlines")) ""))) (command ((name . "notopandbottomlines")) (sequence nil (string ((value . "notopandbottomlines")) ""))) (command ((name . "setupheadertexts")) (sequence nil (string ((value . "setupheadertexts")) "")) (arguments nil (keywords ((optional . "yes")) (variable ((type . "cd:text") (default . "yes")) "") (constant ((type . "margin")) "") (constant ((type . "edge")) "")) (keywords nil (constant ((type . "cd:text")) "") (constant ((type . "cd:section")) "") (constant ((type . "date")) "") (constant ((type . "cd:mark")) "") (constant ((type . "pagenumber")) "")) (keywords nil (constant ((type . "cd:text")) "") (constant ((type . "cd:section")) "") (constant ((type . "date")) "") (constant ((type . "cd:mark")) "") (constant ((type . "pagenumber")) "")))) (command ((name . "setupfootertexts")) (sequence nil (string ((value . "setupfootertexts")) "")) (arguments nil (keywords ((optional . "yes")) (variable ((type . "cd:text") (default . "yes")) "") (constant ((type . "margin")) "") (constant ((type . "edge")) "")) (keywords nil (constant ((type . "cd:text")) "") (constant ((type . "cd:section")) "") (constant ((type . "date")) "") (constant ((type . "cd:mark")) "") (constant ((type . "pagenumber")) "")) (keywords nil (constant ((type . "cd:text")) "") (constant ((type . "cd:section")) "") (constant ((type . "date")) "") (constant ((type . "cd:mark")) "") (constant ((type . "pagenumber")) "")))) (command ((name . "setuptexttexts")) (sequence nil (string ((value . "setuptexttexts")) "")) (arguments nil (keywords ((optional . "yes")) (variable ((type . "cd:text") (default . "yes")) "") (constant ((type . "margin")) "") (constant ((type . "edge")) "")) (keywords nil (constant ((type . "cd:text")) "") (constant ((type . "cd:section")) "") (constant ((type . "date")) "") (constant ((type . "cd:mark")) "") (constant ((type . "pagenumber")) "")) (keywords nil (constant ((type . "cd:text")) "") (constant ((type . "cd:section")) "") (constant ((type . "date")) "") (constant ((type . "cd:mark")) "") (constant ((type . "pagenumber")) "")))) (command ((name . "setuptoptexts")) (sequence nil (string ((value . "setuptoptexts")) "")) (arguments nil (keywords ((optional . "yes")) (variable ((type . "cd:text") (default . "yes")) "") (constant ((type . "margin")) "") (constant ((type . "edge")) "")) (keywords nil (constant ((type . "cd:text")) "") (constant ((type . "cd:section")) "") (constant ((type . "date")) "") (constant ((type . "cd:mark")) "") (constant ((type . "pagenumber")) "")) (keywords nil (constant ((type . "cd:text")) "") (constant ((type . "cd:section")) "") (constant ((type . "date")) "") (constant ((type . "cd:mark")) "") (constant ((type . "pagenumber")) "")))) (command ((name . "setupbottomtexts")) (sequence nil (string ((value . "setupbottomtexts")) "")) (arguments nil (keywords ((optional . "yes")) (variable ((type . "cd:text") (default . "yes")) "") (constant ((type . "margin")) "") (constant ((type . "edge")) "")) (keywords nil (constant ((type . "cd:text")) "") (constant ((type . "cd:section")) "") (constant ((type . "date")) "") (constant ((type . "cd:mark")) "") (constant ((type . "pagenumber")) "")) (keywords nil (constant ((type . "cd:text")) "") (constant ((type . "cd:section")) "") (constant ((type . "date")) "") (constant ((type . "cd:mark")) "") (constant ((type . "pagenumber")) "")))) (command ((name . "definemarking")) (sequence nil (string ((value . "definemarking")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (keywords ((optional . "yes")) (constant ((type . "cd:name")) "")))) (command ((name . "couplemarking")) (sequence nil (string ((value . "couplemarking")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (keywords nil (constant ((type . "cd:name")) "")))) (command ((name . "decouplemarking")) (sequence nil (string ((value . "decouplemarking")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")))) (command ((name . "resetmarking")) (sequence nil (string ((value . "resetmarking")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")))) (command ((name . "setupmarking")) (sequence nil (string ((value . "setupmarking")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (assignments nil (parameter ((name . "state")) (constant ((type . "start")) "") (constant ((type . "stop")) "")) (parameter ((name . "separator")) (constant ((type . "cd:command")) "")) (parameter ((name . "expansion")) (constant ((type . "yes")) "") (constant ((type . "no")) ""))))) (command ((name . "marking")) (sequence nil (string ((value . "marking")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (content nil ""))) (command ((name . "getmarking")) (sequence nil (string ((value . "getmarking")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (keywords nil (constant ((type . "first")) "") (constant ((type . "last")) "") (constant ((type . "previous")) "") (constant ((type . "both")) "") (constant ((type . "all")) "") (constant ((type . "current")) "")))) (command ((name . "nomarking")) (sequence nil (string ((value . "nomarking")) "")) (arguments nil (content nil ""))) (command ((name . "setuplayout")) (sequence nil (string ((value . "setuplayout")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "width")) (constant ((type . "cd:dimension")) "") (constant ((type . "fit")) "") (constant ((type . "middle")) "")) (parameter ((name . "height")) (constant ((type . "cd:dimension")) "") (constant ((type . "fit")) "") (constant ((type . "middle")) "")) (parameter ((name . "backspace")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "topspace")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "margin")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "leftmargin")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "rightmargin")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "header")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "footer")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "top")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "bottom")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "leftedge")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "rightedge")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "headerdistance")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "footerdistance")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "topdistance")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "bottomdistance")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "leftmargindistance")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "rightmargindistance")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "leftedgedistance")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "rightedgedistance")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "horoffset")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "veroffset")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "style")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "color")) (constant ((type . "cd:name")) "")) (parameter ((name . "marking")) (constant ((type . "on")) "") (constant ((type . "off")) "") (constant ((type . "color")) "") (constant ((type . "screen")) "")) (parameter ((name . "location")) (constant ((type . "left")) "") (constant ((type . "middle")) "") (constant ((type . "right")) "") (constant ((type . "bottom")) "") (constant ((type . "top")) "") (constant ((type . "singlesided")) "") (constant ((type . "doublesided")) "")) (parameter ((name . "scale")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "nx")) (constant ((type . "cd:number")) "")) (parameter ((name . "ny")) (constant ((type . "cd:number")) "")) (parameter ((name . "dx")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "dy")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "lines")) (constant ((type . "cd:number")) "")) (parameter ((name . "columns")) (constant ((type . "cd:number")) "")) (parameter ((name . "columndistance")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "grid")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "bottomspace")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "cutspace")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "textdistance")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "textwidth")) (constant ((type . "cd:number")) "")) (parameter ((name . "textmargin")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "clipoffset")) (constant ((type . "cd:dimension")) ""))))) (command ((name . "adaptlayout")) (sequence nil (string ((value . "adaptlayout")) "")) (arguments nil (keywords ((optional . "yes") (list . "yes")) (constant ((type . "cd:number")) "")) (assignments ((list . "yes")) (parameter ((name . "height")) (constant ((type . "cd:dimension")) "") (constant ((type . "max")) "")) (parameter ((name . "lines")) (constant ((type . "cd:number")) ""))))) (command ((name . "showgrid")) (sequence nil (string ((value . "showgrid")) ""))) (command ((name . "placeongrid")) (sequence nil (string ((value . "placeongrid")) "")) (arguments nil (keywords ((optional . "yes")) (inherit ((name . "moveongrid")) "")) (content nil ""))) (command ((name . "moveongrid")) (sequence nil (string ((value . "moveongrid")) "")) (arguments nil (keywords ((optional . "yes") (list . "yes")) (constant ((type . "top")) "") (constant ((type . "both")) "") (constant ((type . "bottom")) "") (constant ((type . "-top")) "") (constant ((type . "-both")) "") (constant ((type . "-bottom")) "") (variable ((type . "cd:text")) "") (constant ((type . "high")) "") (constant ((type . "middle")) "") (constant ((type . "low")) "") (constant ((type . "page")) "") (constant ((type . "none")) "") (constant ((type . "standard") (default . "yes")) "") (constant ((type . "broad")) "") (constant ((type . "fit")) "") (constant ((type . "depth")) "") (constant ((type . "line")) "") (constant ((type . "cd:dimension")) "")))) (command ((name . "project") (type . "environment")) (sequence nil (string ((value . "project")) "")) (arguments nil (file nil ""))) (command ((name . "environment") (type . "environment")) (sequence nil (string ((value . "environment")) "")) (arguments nil (file nil ""))) (command ((name . "product") (type . "environment")) (sequence nil (string ((value . "product")) "")) (arguments nil (file nil ""))) (command ((name . "component") (type . "environment")) (sequence nil (string ((value . "component")) "")) (arguments nil (file nil ""))) (command ((name . "nomorefiles")) (sequence nil (string ((value . "nomorefiles")) ""))) (command ((name . "setupinterlinespace")) (sequence nil (string ((value . "setupinterlinespace")) "")) (arguments nil (choice nil (keywords ((optional . "yes")) (constant ((type . "reset")) "") (constant ((type . "small") (default . "yes")) "") (constant ((type . "medium")) "") (constant ((type . "big")) "") (constant ((type . "on")) "") (constant ((type . "off")) "")) (assignments ((list . "yes")) (parameter ((name . "height")) (constant ((type . "cd:number")) "")) (parameter ((name . "depth")) (constant ((type . "cd:number")) "")) (parameter ((name . "line")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "top")) (constant ((type . "cd:number")) "")) (parameter ((name . "bottom")) (constant ((type . "cd:number")) "")))))) (command ((name . "setuppagenumbering")) (sequence nil (string ((value . "setuppagenumbering")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "alternative")) (constant ((type . "singlesided")) "") (constant ((type . "doublesided")) "")) (parameter ((name . "location")) (constant ((type . "header")) "") (constant ((type . "footer")) "") (constant ((type . "left")) "") (constant ((type . "right")) "") (constant ((type . "middle")) "") (constant ((type . "margin")) "") (constant ((type . "marginedge")) "") (constant ((type . "inleft")) "") (constant ((type . "inright")) "")) (parameter ((name . "conversion")) (constant ((type . "numbers")) "") (constant ((type . "characters")) "") (constant ((type . "Characters")) "") (constant ((type . "romannumerals")) "") (constant ((type . "Romannumerals")) "")) (parameter ((name . "style")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "left")) (constant ((type . "cd:text")) "")) (parameter ((name . "right")) (constant ((type . "cd:text")) "")) (parameter ((name . "way")) (constant ((type . "bytext")) "") (constant ((type . "bycd:section")) "")) (parameter ((name . "text")) (constant ((type . "cd:text")) "")) (parameter ((name . "numberseparator")) (constant ((type . "cd:text")) "")) (parameter ((name . "textseparator")) (constant ((type . "cd:text")) "")) (parameter ((name . "cd:sectionnumber")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "separator")) (constant ((type . "cd:text")) "")) (parameter ((name . "strut")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "state")) (constant ((type . "start")) "") (constant ((type . "stop")) "")) (parameter ((name . "width")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "command")) (constant ((type . "cd:oneargument")) ""))))) (command ((name . "setupnarrower")) (sequence nil (string ((value . "setupnarrower")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "left")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "right")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "middle")) (constant ((type . "cd:dimension")) ""))))) (command ((name . "define")) (sequence nil (string ((value . "define")) "")) (arguments nil (keywords ((optional . "yes")) (constant ((type . "cd:number")) "")) (csname nil "") (content nil ""))) (command ((name . "usecommands")) (sequence nil (string ((value . "usecommands")) "")) (arguments nil (content nil ""))) (command ((name . "definestartstop")) (sequence nil (string ((value . "definestartstop")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (assignments ((list . "yes")) (parameter ((name . "before")) (constant ((type . "cd:command")) "")) (parameter ((name . "after")) (constant ((type . "cd:command")) "")) (parameter ((name . "style")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "commands")) (constant ((type . "cd:command")) ""))))) (command ((name . "setupheads")) (sequence nil (string ((value . "setupheads")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "sectionnumber")) (constant ((type . "yes")) "") (variable ((type . "cd:number")) "") (constant ((type . "no")) "")) (parameter ((name . "alternative")) (constant ((type . "normal")) "") (constant ((type . "margin")) "") (constant ((type . "middle")) "") (variable ((type . "cd:text")) "") (constant ((type . "paragraph")) "")) (parameter ((name . "separator")) (constant ((type . "cd:text")) "")) (parameter ((name . "align")) (constant ((type . "left")) "") (constant ((type . "right")) "") (constant ((type . "normal")) "") (constant ((type . "broad")) "")) (parameter ((name . "aligntitle")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "tolerance")) (constant ((type . "verystrict")) "") (constant ((type . "strict")) "") (constant ((type . "tolerant")) "") (constant ((type . "verytolerant")) "") (constant ((type . "stretch")) "")) (parameter ((name . "indentnext")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "command")) (constant ((type . "cd:twoarguments")) "")) (parameter ((name . "margin")) (constant ((type . "cd:dimension")) ""))))) (command ((name . "setupcaptions")) (sequence nil (string ((value . "setupcaptions")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "location")) (constant ((type . "top")) "") (constant ((type . "bottom")) "") (constant ((type . "none")) "") (constant ((type . "high")) "") (constant ((type . "low")) "") (constant ((type . "middle")) "")) (parameter ((name . "width")) (constant ((type . "fit")) "") (constant ((type . "broad")) "") (constant ((type . "max")) "") (constant ((type . "cd:dimension")) "")) (parameter ((name . "minwidth")) (constant ((type . "fit")) "") (constant ((type . "cd:dimension")) "")) (parameter ((name . "headstyle")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "style")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "number")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "inbetween")) (constant ((type . "cd:command")) "")) (parameter ((name . "align")) (constant ((type . "left")) "") (constant ((type . "middle")) "") (constant ((type . "right")) "") (constant ((type . "no")) "")) (parameter ((name . "conversion")) (constant ((type . "numbers")) "") (constant ((type . "characters")) "") (constant ((type . "Characters")) "") (constant ((type . "romannumerals")) "") (constant ((type . "Romannumerals")) "")) (parameter ((name . "way")) (constant ((type . "bytext")) "") (constant ((type . "bycd:section")) "")) (parameter ((name . "separator")) (constant ((type . "cd:text")) "")) (parameter ((name . "command")) (constant ((type . "cd:command")) "")) (parameter ((name . "distance")) (constant ((type . "cd:dimension")) ""))))) (command ((name . "setupcaption")) (sequence nil (string ((value . "setupcaption")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (assignments ((list . "yes")) (inherit ((name . "setupcaptions")) "")))) (command ((name . "setupfloats")) (sequence nil (string ((value . "setupfloats")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "location")) (constant ((type . "left")) "") (constant ((type . "right")) "") (constant ((type . "middle")) "")) (parameter ((name . "width")) (constant ((type . "fit")) "") (constant ((type . "cd:dimension")) "")) (parameter ((name . "before")) (constant ((type . "cd:command")) "")) (parameter ((name . "after")) (constant ((type . "cd:command")) "")) (parameter ((name . "margin")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "spacebefore")) (constant ((type . "small")) "") (constant ((type . "medium")) "") (constant ((type . "big")) "") (constant ((type . "none")) "")) (parameter ((name . "spaceafter")) (constant ((type . "small")) "") (constant ((type . "medium")) "") (constant ((type . "big")) "") (constant ((type . "none")) "")) (parameter ((name . "sidespacebefore")) (constant ((type . "small")) "") (constant ((type . "medium")) "") (constant ((type . "big")) "") (constant ((type . "none")) "")) (parameter ((name . "sidespaceafter")) (constant ((type . "small")) "") (constant ((type . "medium")) "") (constant ((type . "big")) "") (constant ((type . "none")) "")) (parameter ((name . "indentnext")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "ntop")) (constant ((type . "cd:number")) "")) (parameter ((name . "nbottom")) (constant ((type . "cd:number")) "")) (parameter ((name . "nlines")) (constant ((type . "cd:number")) "")) (parameter ((name . "default")) (constant ((type . "cd:name")) "")) (parameter ((name . "tolerance")) (constant ((type . "0")) "") (constant ((type . "1")) "") (constant ((type . "2")) "")) (parameter ((name . "leftmargindistance")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "rightmargindistance")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "sidealign")) (constant ((type . "normal")) "") (constant ((type . "line")) "")) (inherit ((name . "setupframed")) "")))) (command ((name . "setupfloatsplitting")) (sequence nil (string ((value . "setupfloatsplitting")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "conversion")) (constant ((type . "numbers")) "") (constant ((type . "characters")) "") (constant ((type . "Characters")) "") (constant ((type . "romannumerals")) "") (constant ((type . "Romannumerals")) "")) (parameter ((name . "lines")) (constant ((type . "cd:number")) ""))))) (command ((name . "splitfloat")) (sequence nil (string ((value . "splitfloat")) "")) (arguments nil (assignments ((optional . "yes") (list . "yes")) (inherit ((name . "setupfloatsplitting")) "")) (content nil "") (content nil ""))) (command ((name . "setupoppositeplacing")) (sequence nil (string ((value . "setupoppositeplacing")) "")) (arguments nil (assignments nil (parameter ((name . "state")) (constant ((type . "start")) "") (constant ((type . "stop")) ""))))) (command ((name . "opposite") (type . "environment")) (sequence nil (string ((value . "opposite")) ""))) (command ((name . "setuphyphenmark")) (sequence nil (string ((value . "setuphyphenmark")) "")) (arguments nil (assignments nil (parameter ((name . "sign")) (constant ((type . "--")) "") (constant ((type . "---")) "") (constant ((type . "-")) "") (constant ((type . "~")) "") (constant ((type . ")")) "") (constant ((type . "(")) "") (constant ((type . "=")) "") (constant ((type . "/")) ""))))) (command ((name . "setuppositioning")) (sequence nil (string ((value . "setuppositioning")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "state")) (constant ((type . "start")) "") (constant ((type . "overlay")) "")) (parameter ((name . "unit")) (constant ((type . "cm")) "") (constant ((type . "pt")) "") (constant ((type . "em")) "") (constant ((type . "mm")) "") (constant ((type . "ex")) "") (constant ((type . "es")) "") (constant ((type . "in")) "")) (parameter ((name . "factor")) (constant ((type . "cd:number")) "")) (parameter ((name . "scale")) (constant ((type . "cd:number")) "")) (parameter ((name . "offset")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "xstep")) (constant ((type . "absolute")) "") (constant ((type . "relative")) "")) (parameter ((name . "ystep")) (constant ((type . "absolute")) "") (constant ((type . "relative")) ""))))) (command ((name . "positioning") (type . "environment")) (sequence nil (string ((value . "positioning")) ""))) (command ((name . "grid")) (sequence nil (string ((value . "grid")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "x")) (constant ((type . "cd:number")) "")) (parameter ((name . "y")) (constant ((type . "cd:number")) "")) (parameter ((name . "nx")) (constant ((type . "cd:number")) "")) (parameter ((name . "ny")) (constant ((type . "cd:number")) "")) (parameter ((name . "dx")) (constant ((type . "cd:number")) "")) (parameter ((name . "dy")) (constant ((type . "cd:number")) "")) (parameter ((name . "xstep")) (constant ((type . "cd:number")) "")) (parameter ((name . "ystep")) (constant ((type . "cd:number")) "")) (parameter ((name . "offset")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "factor")) (constant ((type . "cd:number")) "")) (parameter ((name . "scale")) (constant ((type . "cd:number")) "")) (parameter ((name . "unit")) (constant ((type . "cm")) "") (constant ((type . "pt")) "") (constant ((type . "em")) "") (constant ((type . "mm")) "") (constant ((type . "ex")) "") (constant ((type . "es")) "") (constant ((type . "in")) "")) (parameter ((name . "location")) (constant ((type . "left")) "") (constant ((type . "middle")) ""))))) (command ((name . "page")) (sequence nil (string ((value . "page")) "")) (arguments nil (keywords ((list . "yes")) (constant ((type . "yes") (default . "yes")) "") (constant ((type . "makeup")) "") (constant ((type . "no")) "") (constant ((type . "preference")) "") (constant ((type . "bigpreference")) "") (constant ((type . "left")) "") (constant ((type . "right")) "") (constant ((type . "disable")) "") (constant ((type . "last")) "") (constant ((type . "quadruple")) "") (constant ((type . "even")) "") (constant ((type . "odd")) "") (constant ((type . "blank")) "") (constant ((type . "empty")) "") (constant ((type . "reset")) "")))) (command ((name . "setupreferencing")) (sequence nil (string ((value . "setupreferencing")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "state")) (constant ((type . "start")) "") (constant ((type . "stop")) "")) (parameter ((name . "cd:sectionnumber")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "prefix")) (constant ((type . "+")) "") (constant ((type . "-")) "") (constant ((type . "cd:text")) "")) (parameter ((name . "interaction")) (constant ((type . "label")) "") (variable ((type . "cd:text")) "") (constant ((type . "all")) "") (constant ((type . "symbol")) "")) (parameter ((name . "width")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "left")) (constant ((type . "cd:command")) "")) (parameter ((name . "right")) (constant ((type . "cd:command")) "")) (parameter ((name . "convertfile")) (constant ((type . "yes")) "") (constant ((type . "no")) "") (constant ((type . "small")) "") (constant ((type . "big")) "")) (parameter ((name . "separator")) (constant ((type . "cd:text")) "")) (parameter ((name . "autofile")) (constant ((type . "yes")) "") (constant ((type . "no")) "") (constant ((type . "page")) "")) (parameter ((name . "global")) (constant ((type . "yes")) "") (constant ((type . "no")) ""))))) (command ((name . "setupurl")) (sequence nil (string ((value . "setupurl")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "style")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "urlalternative")) (constant ((type . "none")) "") (constant ((type . "both")) "") (constant ((type . "before")) "") (constant ((type . "after")) "")) (parameter ((name . "urlspace")) (constant ((type . "yes")) "") (constant ((type . "no")) ""))))) (command ((name . "writetoreferencelist")) (sequence nil (string ((value . "writetoreferencelist")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (content nil "") (content nil ""))) (command ((name . "placereferencelist")) (sequence nil (string ((value . "placereferencelist")) "")) (arguments nil (keywords ((list . "yes")) (constant ((type . "cd:name")) "")))) (command ((name . "definereferencelist")) (sequence nil (string ((value . "definereferencelist")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (assignments ((optional . "yes") (list . "yes")) (inherit ((name . "setupreferencelist")) "")))) (command ((name . "setupreferencelist")) (sequence nil (string ((value . "setupreferencelist")) "")) (arguments nil (keywords ((list . "yes")) (constant ((type . "cd:name")) "")) (assignments ((list . "yes")) (parameter ((name . "state")) (constant ((type . "start")) "") (constant ((type . "stop")) "")) (parameter ((name . "criterium")) (constant ((type . "cd:section")) "") (constant ((type . "local")) "") (constant ((type . "previous")) "") (constant ((type . "all")) "")) (parameter ((name . "command")) (constant ((type . "cd:command")) "")) (parameter ((name . "before")) (constant ((type . "cd:command")) "")) (parameter ((name . "after")) (constant ((type . "cd:command")) ""))))) (command ((name . "writetolist")) (sequence nil (string ((value . "writetolist")) "")) (arguments nil (keywords nil (constant ((type . "cd:section")) "") (constant ((type . "cd:name")) "")) (content nil "") (content nil ""))) (command ((name . "writebetweenlist")) (sequence nil (string ((value . "writebetweenlist")) "")) (arguments nil (keywords nil (constant ((type . "cd:section")) "") (constant ((type . "cd:name")) "")) (content nil ""))) (command ((name . "nolist")) (sequence nil (string ((value . "nolist")) "")) (arguments nil (content nil ""))) (command ((name . "listsymbol")) (sequence nil (string ((value . "listsymbol")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (content nil ""))) (command ((name . "placelist")) (sequence nil (string ((value . "placelist")) "")) (arguments nil (keywords ((list . "yes")) (constant ((type . "cd:name")) "")) (assignments ((optional . "yes") (list . "yes")) (inherit ((name . "setuplist")) "")))) (command ((name . "determinelistcharacteristics")) (sequence nil (string ((value . "determinelistcharacteristics")) "")) (arguments nil (keywords ((list . "yes")) (constant ((type . "cd:name")) "")) (assignments ((optional . "yes") (list . "yes")) (inherit ((name . "setuplist")) "")))) (command ((name . "definelist")) (sequence nil (string ((value . "definelist")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (keywords ((optional . "yes")) (constant ((type . "cd:name")) "")) (assignments ((optional . "yes") (list . "yes")) (inherit ((name . "setuplist")) "")))) (command ((name . "setuplist")) (sequence nil (string ((value . "setuplist")) "")) (arguments nil (keywords ((list . "yes")) (constant ((type . "cd:name")) "")) (assignments ((list . "yes")) (parameter ((name . "state")) (constant ((type . "start")) "") (constant ((type . "stop")) "")) (parameter ((name . "alternative")) (constant ((type . "a")) "") (constant ((type . "b")) "") (constant ((type . "c")) "") (constant ((type . "...")) "") (constant ((type . "none")) "") (variable ((type . "cd:command")) "")) (parameter ((name . "coupling")) (constant ((type . "on")) "") (constant ((type . "off")) "")) (parameter ((name . "criterium")) (constant ((type . "cd:section")) "") (constant ((type . "local")) "") (constant ((type . "previous")) "") (constant ((type . "current")) "") (constant ((type . "all")) "")) (parameter ((name . "pageboundaries")) (constant ((type . "cd:list")) "")) (parameter ((name . "style")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "numberstyle")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "textstyle")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "pagestyle")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "color")) (constant ((type . "cd:name")) "")) (parameter ((name . "command")) (constant ((type . "cd:threearguments")) "")) (parameter ((name . "numbercommand")) (constant ((type . "cd:oneargument")) "")) (parameter ((name . "textcommand")) (constant ((type . "cd:oneargument")) "")) (parameter ((name . "pagecommand")) (constant ((type . "cd:oneargument")) "")) (parameter ((name . "interaction")) (variable ((type . "cd:sectionnumber")) "") (variable ((type . "cd:text")) "") (constant ((type . "pagenumber")) "") (constant ((type . "all")) "")) (parameter ((name . "before")) (constant ((type . "cd:command")) "")) (parameter ((name . "after")) (constant ((type . "cd:command")) "")) (parameter ((name . "inbetween")) (constant ((type . "cd:command")) "")) (parameter ((name . "left")) (constant ((type . "cd:text")) "")) (parameter ((name . "right")) (constant ((type . "cd:text")) "")) (parameter ((name . "label")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "prefix")) (constant ((type . "yes")) "") (constant ((type . "no")) "") (constant ((type . "none")) "")) (parameter ((name . "pagenumber")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "cd:sectionnumber")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "aligntitle")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "margin")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "width")) (constant ((type . "cd:dimension")) "") (constant ((type . "fit")) "")) (parameter ((name . "height")) (constant ((type . "cd:dimension")) "") (constant ((type . "fit")) "") (constant ((type . "broad")) "")) (parameter ((name . "depth")) (constant ((type . "cd:dimension")) "") (constant ((type . "fit")) "") (constant ((type . "broad")) "")) (parameter ((name . "distance")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "separator")) (constant ((type . "cd:text")) "")) (parameter ((name . "stopper")) (constant ((type . "cd:text")) "")) (parameter ((name . "symbol")) (constant ((type . "none")) "") (constant ((type . "1")) "") (constant ((type . "2")) "") (constant ((type . "3")) "") (constant ((type . "...")) "")) (parameter ((name . "expansion")) (constant ((type . "yes")) "") (constant ((type . "no")) "") (variable ((type . "cd:command")) "")) (parameter ((name . "maxwidth")) (constant ((type . "cd:dimension")) "")) (inherit ((name . "framed")) "")))) (command ((name . "definecombinedlist")) (sequence nil (string ((value . "definecombinedlist")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (keywords ((list . "yes")) (constant ((type . "cd:list")) "")) (assignments ((optional . "yes") (list . "yes")) (inherit ((name . "setupcombinedlist")) "")))) (command ((name . "setupcombinedlist")) (sequence nil (string ((value . "setupcombinedlist")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (assignments ((list . "yes")) (parameter ((name . "level")) (constant ((type . "1")) "") (constant ((type . "2")) "") (constant ((type . "3")) "") (constant ((type . "4")) "") (constant ((type . "cd:section")) "") (constant ((type . "current")) "")) (inherit ((name . "setuplist")) "")))) (command ((name . "placecombinedlist") (generated . "yes")) (sequence nil (string ((value . "place")) "") (variable ((value . "combinedlist")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (assignments ((optional . "yes") (list . "yes")) (inherit ((name . "setupcombinedlist")) "")))) (command ((name . "completecombinedlist") (generated . "yes")) (sequence nil (string ((value . "complete")) "") (variable ((value . "combinedlist")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (assignments ((list . "yes")) (inherit ((name . "setupcombinedlist")) "")))) (command ((name . "setupnumbering")) (sequence nil (string ((value . "setupnumbering")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "way")) (constant ((type . "bytext")) "") (constant ((type . "bycd:section")) "")) (parameter ((name . "state")) (constant ((type . "start")) "") (constant ((type . "stop")) ""))))) (command ((name . "setupformulae")) (sequence nil (string ((value . "setupformulae")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "location")) (constant ((type . "left")) "") (constant ((type . "right")) "")) (parameter ((name . "left")) (constant ((type . "cd:text")) "")) (parameter ((name . "right")) (constant ((type . "cd:text")) "")) (parameter ((name . "align")) (constant ((type . "left")) "") (constant ((type . "middle")) "") (constant ((type . "right")) "")) (parameter ((name . "strut")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "distance")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "margin")) (constant ((type . "cd:dimension")) "") (constant ((type . "standard")) "") (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "leftmargin")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "rightmargin")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "indentnext")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "alternative")) (constant ((type . "cd:name")) "")) (parameter ((name . "spacebefore")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "after")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "separator")) (constant ((type . "cd:text")) ""))))) (command ((name . "publication")) (sequence nil (string ((value . "publication")) "")) (arguments nil (reference nil ""))) (command ((name . "setuppublications")) (sequence nil (string ((value . "setuppublications")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "alternative")) (constant ((type . "apa")) "") (constant ((type . "normal")) "")) (inherit ((name . "setupenumerations")) "")))) (command ((name . "setuplines")) (sequence nil (string ((value . "setuplines")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "before")) (constant ((type . "cd:command")) "")) (parameter ((name . "after")) (constant ((type . "cd:command")) "")) (parameter ((name . "inbetween")) (constant ((type . "cd:command")) "")) (parameter ((name . "indenting")) (constant ((type . "yes")) "") (constant ((type . "no")) "") (constant ((type . "even")) "") (constant ((type . "odd")) ""))))) (command ((name . "lines") (type . "environment")) (sequence nil (string ((value . "lines")) ""))) (command ((name . "setupparagraphnumbering")) (sequence nil (string ((value . "setupparagraphnumbering")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "state")) (constant ((type . "start")) "") (constant ((type . "stop")) "") (constant ((type . "reset")) "") (constant ((type . "line")) "")) (parameter ((name . "style")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "distance")) (constant ((type . "cd:dimension")) ""))))) (command ((name . "setuplinenumbering")) (sequence nil (string ((value . "setuplinenumbering")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "conversion")) (constant ((type . "numbers")) "") (constant ((type . "characters")) "") (constant ((type . "Characters")) "") (constant ((type . "romannumerals")) "") (constant ((type . "Romannumerals")) "") (variable ((type . "cd:text")) "")) (parameter ((name . "start")) (constant ((type . "cd:number")) "")) (parameter ((name . "step")) (constant ((type . "cd:number")) "")) (parameter ((name . "width")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "location")) (constant ((type . "intext")) "") (constant ((type . "inmargin")) "")) (parameter ((name . "style")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "prefix")) (constant ((type . "cd:text")) "")) (parameter ((name . "referencing")) (constant ((type . "on")) "") (constant ((type . "off")) ""))))) (command ((name . "linenumbering") (type . "environment")) (sequence nil (string ((value . "linenumbering")) "")) (arguments nil (keywords nil (constant ((type . "continue")) "")))) (command ((name . "line") (type . "environment")) (sequence nil (string ((value . "line")) "")) (arguments nil (reference nil ""))) (command ((name . "someline")) (sequence nil (string ((value . "someline")) "")) (arguments nil (reference nil ""))) (command ((name . "inline")) (sequence nil (string ((value . "inline")) "")) (arguments nil (reference nil ""))) (command ((name . "setupinmargin")) (sequence nil (string ((value . "setupinmargin")) "")) (arguments nil (keywords ((optional . "yes")) (constant ((type . "left")) "") (constant ((type . "right")) "") (constant ((type . "cd:number")) "")) (assignments ((list . "yes")) (parameter ((name . "location")) (constant ((type . "left")) "") (constant ((type . "right")) "") (constant ((type . "both")) "")) (parameter ((name . "style")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "before")) (constant ((type . "cd:command")) "")) (parameter ((name . "after")) (constant ((type . "cd:command")) "")) (parameter ((name . "align")) (constant ((type . "inner")) "") (constant ((type . "outer")) "") (constant ((type . "left")) "") (constant ((type . "right")) "") (constant ((type . "middle")) "") (constant ((type . "normal")) "") (constant ((type . "no")) "") (constant ((type . "yes")) "")) (parameter ((name . "line")) (constant ((type . "cd:number")) "")) (parameter ((name . "distance")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "separator")) (constant ((type . "cd:text")) "")) (parameter ((name . "width")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "distance")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "stack")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (inherit ((name . "setupframed")) "")))) (command ((name . "setuppagenumber")) (sequence nil (string ((value . "setuppagenumber")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "number")) (constant ((type . "cd:number")) "")) (parameter ((name . "state")) (constant ((type . "start")) "") (constant ((type . "stop")) "") (constant ((type . "keep")) ""))))) (command ((name . "setupsubpagenumber")) (sequence nil (string ((value . "setupsubpagenumber")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "way")) (constant ((type . "bytext")) "") (constant ((type . "bycd:section")) "")) (parameter ((name . "state")) (constant ((type . "start")) "") (constant ((type . "stop")) "") (constant ((type . "none")) ""))))) (command ((name . "setupblank")) (sequence nil (string ((value . "setupblank")) "")) (arguments nil (keywords ((optional . "yes")) (constant ((type . "normal") (default . "yes")) "") (constant ((type . "standard")) "") (constant ((type . "line")) "") (constant ((type . "cd:dimension")) "") (constant ((type . "big")) "") (constant ((type . "medium")) "") (constant ((type . "small")) "") (constant ((type . "fixed")) "") (constant ((type . "flexible")) "")))) (command ((name . "defineblank")) (sequence nil (string ((value . "defineblank")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (keywords nil (inherit ((name . "setupblank")) "")))) (command ((name . "definepapersize")) (sequence nil (string ((value . "definepapersize")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (assignments ((list . "yes")) (parameter ((name . "width")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "height")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "offset")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "scale")) (constant ((type . "cd:number")) ""))))) (command ((name . "setuppaper")) (sequence nil (string ((value . "setuppaper")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "paper")) (constant ((type . "cd:name")) "")) (parameter ((name . "page")) (constant ((type . "cd:name")) "")) (parameter ((name . "nx")) (constant ((type . "cd:number")) "")) (parameter ((name . "ny")) (constant ((type . "cd:number")) "")) (parameter ((name . "width")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "height")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "topspace")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "backspace")) (constant ((type . "cd:dimension")) ""))))) (command ((name . "setuppapersize")) (sequence nil (string ((value . "setuppapersize")) "")) (arguments nil (keywords ((list . "yes")) (constant ((type . "A3")) "") (constant ((type . "A4") (default . "yes")) "") (constant ((type . "A5")) "") (constant ((type . "A6")) "") (constant ((type . "letter")) "") (constant ((type . "...")) "") (constant ((type . "CD")) "") (constant ((type . "cd:name")) "") (constant ((type . "landscape")) "") (constant ((type . "mirrored")) "") (constant ((type . "rotated")) "") (constant ((type . "90")) "") (constant ((type . "180")) "") (constant ((type . "270")) "")) (keywords ((optional . "yes") (list . "yes")) (constant ((type . "A3")) "") (constant ((type . "A4") (default . "yes")) "") (constant ((type . "A5")) "") (constant ((type . "A6")) "") (constant ((type . "letter")) "") (constant ((type . "...")) "") (constant ((type . "cd:name")) "") (constant ((type . "landscape")) "") (constant ((type . "mirrored")) "") (constant ((type . "rotated")) "") (constant ((type . "negative")) "") (constant ((type . "90")) "") (constant ((type . "180")) "") (constant ((type . "270")) "")))) (command ((name . "setuparranging")) (sequence nil (string ((value . "setuparranging")) "")) (arguments nil (keywords ((list . "yes")) (constant ((type . "disable")) "") (constant ((type . "2*16")) "") (constant ((type . "2*8")) "") (constant ((type . "2*4")) "") (constant ((type . "2*2")) "") (constant ((type . "2**2")) "") (constant ((type . "2*2*4")) "") (constant ((type . "2*4*2")) "") (constant ((type . "2UP")) "") (constant ((type . "2DOWN")) "") (constant ((type . "2SIDE")) "") (constant ((type . "2TOP")) "") (constant ((type . "mirrored")) "") (constant ((type . "rotated")) "") (constant ((type . "doublesided")) "") (constant ((type . "negative")) "") (constant ((type . "90")) "") (constant ((type . "180")) "") (constant ((type . "270")) "")))) (command ((name . "showprint")) (sequence nil (string ((value . "showprint")) "")) (arguments nil (keywords ((list . "yes")) (inherit ((name . "setuppapersize")) "")) (keywords ((list . "yes")) (inherit ((name . "setuppapersize")) "")) (assignments ((list . "yes")) (inherit ((name . "setuplayout")) "")))) (command ((name . "definelogo")) (sequence nil (string ((value . "definelogo")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (keywords nil (constant ((type . "top")) "") (constant ((type . "header")) "") (constant ((type . "footer")) "") (constant ((type . "bottom")) "")) (keywords nil (constant ((type . "none")) "") (constant ((type . "page")) "") (constant ((type . "leftedge")) "") (constant ((type . "leftmargin")) "") (constant ((type . "left")) "") (constant ((type . "middle")) "") (constant ((type . "right")) "") (constant ((type . "rightmargin")) "") (constant ((type . "rightedge")) "")) (assignments ((list . "yes")) (parameter ((name . "command")) (constant ((type . "cd:command")) "") (constant ((type . "cd:text")) "")) (parameter ((name . "state")) (constant ((type . "start")) "") (constant ((type . "stop")) ""))))) (command ((name . "placelogos")) (sequence nil (string ((value . "placelogos")) "")) (arguments nil (keywords ((optional . "yes") (list . "yes")) (constant ((type . "cd:name")) "")))) (command ((name . "setupwhitespace")) (sequence nil (string ((value . "setupwhitespace")) "")) (arguments nil (keywords ((optional . "yes")) (constant ((type . "none") (default . "yes")) "") (constant ((type . "small")) "") (constant ((type . "medium")) "") (constant ((type . "big")) "") (constant ((type . "line")) "") (constant ((type . "fixed")) "") (constant ((type . "fix")) "") (constant ((type . "cd:dimension")) "")))) (command ((name . "setupindenting")) (sequence nil (string ((value . "setupindenting")) "")) (arguments nil (keywords ((list . "yes")) (constant ((type . "none") (default . "yes")) "") (constant ((type . "small")) "") (constant ((type . "medium")) "") (constant ((type . "big")) "") (constant ((type . "next")) "") (constant ((type . "first")) "") (constant ((type . "cd:dimension")) "")))) (command ((name . "definesectionblock")) (sequence nil (string ((value . "definesectionblock")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (assignments ((optional . "yes") (list . "yes")) (inherit ((name . "setupsectionblock")) "")))) (command ((name . "setupsectionblock")) (sequence nil (string ((value . "setupsectionblock")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (assignments ((list . "yes")) (parameter ((name . "number")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "page")) (constant ((type . "yes")) "") (constant ((type . "right")) "")) (parameter ((name . "before")) (constant ((type . "cd:command")) "")) (parameter ((name . "after")) (constant ((type . "cd:command")) ""))))) (command ((name . "definesection")) (sequence nil (string ((value . "definesection")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")))) (command ((name . "setupsection")) (sequence nil (string ((value . "setupsection")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (keywords ((optional . "yes")) (constant ((type . "cd:name")) "")) (assignments ((list . "yes")) (parameter ((name . "conversion")) (constant ((type . "numbers")) "") (constant ((type . "characters")) "") (constant ((type . "Characters")) "") (constant ((type . "romannumerals")) "") (constant ((type . "Romannumerals")) "")) (parameter ((name . "previousnumber")) (constant ((type . "yes")) "") (constant ((type . "no")) ""))))) (command ((name . "setuphead")) (sequence nil (string ((value . "setuphead")) "")) (arguments nil (keywords ((list . "yes")) (constant ((type . "cd:section")) "")) (assignments ((list . "yes")) (parameter ((name . "style")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "textstyle")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "numberstyle")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "color")) (constant ((type . "cd:name")) "")) (parameter ((name . "textcolor")) (constant ((type . "cd:name")) "")) (parameter ((name . "numbercolor")) (constant ((type . "cd:name")) "")) (parameter ((name . "number")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "ownnumber")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "page")) (constant ((type . "left")) "") (constant ((type . "right")) "") (constant ((type . "yes")) "")) (parameter ((name . "continue")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "header")) (constant ((type . "none")) "") (constant ((type . "empty")) "") (constant ((type . "high")) "") (constant ((type . "nomarking")) "")) (parameter ((name . "text")) (constant ((type . "none")) "") (constant ((type . "empty")) "") (constant ((type . "high")) "") (constant ((type . "nomarking")) "")) (parameter ((name . "footer")) (constant ((type . "none")) "") (constant ((type . "empty")) "") (constant ((type . "high")) "") (constant ((type . "nomarking")) "")) (parameter ((name . "before")) (constant ((type . "cd:command")) "")) (parameter ((name . "inbetween")) (constant ((type . "cd:command")) "")) (parameter ((name . "after")) (constant ((type . "cd:command")) "")) (parameter ((name . "alternative")) (constant ((type . "normal")) "") (constant ((type . "inmargin")) "") (constant ((type . "middle")) "") (variable ((type . "cd:text")) "")) (parameter ((name . "command")) (constant ((type . "cd:twoarguments")) "")) (parameter ((name . "numbercommand")) (constant ((type . "cd:oneargument")) "")) (parameter ((name . "textcommand")) (constant ((type . "cd:oneargument")) "")) (parameter ((name . "prefix")) (constant ((type . "+")) "") (constant ((type . "-")) "") (constant ((type . "cd:text")) "")) (parameter ((name . "placehead")) (constant ((type . "yes")) "") (constant ((type . "no")) "") (constant ((type . "empty")) "")) (parameter ((name . "incrementnumber")) (constant ((type . "yes")) "") (constant ((type . "no")) "") (variable ((type . "cd:list")) "") (constant ((type . "cd:file")) "")) (parameter ((name . "resetnumber")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "file")) (constant ((type . "cd:name")) "")) (parameter ((name . "expansion")) (constant ((type . "yes")) "") (variable ((type . "cd:command")) "") (constant ((type . "no")) "")) (parameter ((name . "margintext")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (inherit ((name . "setupheads")) "")))) (command ((name . "setupheadnumber")) (sequence nil (string ((value . "setupheadnumber")) "")) (arguments nil (keywords nil (constant ((type . "cd:section")) "")) (keywords nil (constant ((type . "cd:number")) "") (constant ((type . "+cd:number")) "") (constant ((type . "-cd:number")) "")))) (command ((name . "headnumber")) (sequence nil (string ((value . "headnumber")) "")) (arguments nil (keywords ((optional . "yes")) (constant ((type . "cd:section")) "")))) (command ((name . "determineheadnumber")) (sequence nil (string ((value . "determineheadnumber")) "")) (arguments nil (keywords nil (constant ((type . "cd:section")) "")))) (command ((name . "currentheadnumber")) (sequence nil (string ((value . "currentheadnumber")) ""))) (command ((name . "nextsection") (generated . "yes")) (sequence nil (string ((value . "next")) "") (variable ((value . "section")) ""))) (command ((name . "definehead")) (sequence nil (string ((value . "definehead")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (keywords nil (constant ((type . "cd:section")) "")))) (command ((name . "setupitemgroup")) (sequence nil (string ((value . "setupitemgroup")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (keywords ((optional . "yes")) (constant ((type . "cd:number")) "") (constant ((type . "each")) "")) (keywords ((optional . "yes") (list . "yes")) (constant ((type . "standard") (default . "yes")) "") (constant ((type . "broad")) "") (constant ((type . "serried")) "") (constant ((type . "packed")) "") (constant ((type . "unpacked")) "") (constant ((type . "stopper")) "") (constant ((type . "joinedup")) "") (constant ((type . "atmargin")) "") (constant ((type . "inmargin")) "") (constant ((type . "autointro")) "") (constant ((type . "loose")) "") (variable ((type . "cd:section")) "") (constant ((type . "intext")) "")) (assignments ((optional . "yes") (list . "yes")) (parameter ((name . "margin")) (constant ((type . "no")) "") (constant ((type . "standard")) "") (constant ((type . "cd:dimension")) "")) (parameter ((name . "width")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "distance")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "factor")) (constant ((type . "cd:number")) "")) (parameter ((name . "items")) (constant ((type . "cd:number")) "")) (parameter ((name . "start")) (constant ((type . "cd:number")) "")) (parameter ((name . "before")) (constant ((type . "cd:command")) "")) (parameter ((name . "inbetween")) (constant ((type . "cd:command")) "")) (parameter ((name . "after")) (constant ((type . "cd:command")) "")) (parameter ((name . "left")) (constant ((type . "cd:text")) "")) (parameter ((name . "right")) (constant ((type . "cd:text")) "")) (parameter ((name . "beforehead")) (constant ((type . "cd:command")) "")) (parameter ((name . "afterhead")) (constant ((type . "cd:command")) "")) (parameter ((name . "headstyle")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "marstyle")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "symstyle")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "stopper")) (constant ((type . "cd:text")) "")) (parameter ((name . "n")) (constant ((type . "cd:number")) "")) (parameter ((name . "symbol")) (constant ((type . "cd:number")) "")) (parameter ((name . "align")) (constant ((type . "left")) "") (constant ((type . "right")) "") (constant ((type . "normal")) "")) (parameter ((name . "indentnext")) (constant ((type . "yes")) "") (constant ((type . "no")) ""))))) (command ((name . "itemgroup") (type . "environment") (generated . "yes")) (sequence nil (variable ((value . "itemgroup")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (keywords ((optional . "yes") (list . "yes")) (constant ((type . "a")) "") (constant ((type . "A")) "") (constant ((type . "KA")) "") (constant ((type . "n")) "") (constant ((type . "N")) "") (constant ((type . "m")) "") (constant ((type . "r")) "") (constant ((type . "R")) "") (constant ((type . "KR")) "") (constant ((type . "cd:number")) "") (constant ((type . "continue")) "") (constant ((type . "standard") (default . "yes")) "") (constant ((type . "broad")) "") (constant ((type . "serried")) "") (constant ((type . "packed")) "") (constant ((type . "stopper")) "") (constant ((type . "joinedup")) "") (constant ((type . "atmargin")) "") (constant ((type . "inmargin")) "") (constant ((type . "intro")) "") (constant ((type . "columns")) "")) (assignments ((optional . "yes") (list . "yes")) (inherit ((name . "setupitemgroup")) "")))) (command ((name . "item")) (sequence nil (string ((value . "item")) "")) (arguments nil (reference ((optional . "yes") (list . "yes")) ""))) (command ((name . "but")) (sequence nil (string ((value . "but")) "")) (arguments nil (reference ((interactive . "exclusive")) ""))) (command ((name . "its")) (sequence nil (string ((value . "its")) "")) (arguments nil (reference ((optional . "yes") (list . "yes")) ""))) (command ((name . "ran")) (sequence nil (string ((value . "ran")) "")) (arguments nil (content nil ""))) (command ((name . "head")) (sequence nil (string ((value . "head")) "")) (arguments nil (reference ((optional . "yes") (list . "yes")) ""))) (command ((name . "mar")) (sequence nil (string ((value . "mar")) "")) (arguments nil (reference ((optional . "yes") (list . "yes")) "") (content nil ""))) (command ((name . "sub")) (sequence nil (string ((value . "sub")) "")) (arguments nil (reference ((optional . "yes") (list . "yes")) ""))) (command ((name . "sym")) (sequence nil (string ((value . "sym")) "")) (arguments nil (content nil ""))) (command ((name . "nop")) (sequence nil (string ((value . "nop")) ""))) (command ((name . "defineregister")) (sequence nil (string ((value . "defineregister")) "")) (arguments nil (keywords nil (constant ((type . "cd:singular")) "")) (keywords nil (constant ((type . "cd:plural")) "")))) (command ((name . "setupregister")) (sequence nil (string ((value . "setupregister")) "")) (arguments nil (keywords nil (constant ((type . "cd:singular")) "")) (keywords ((optional . "yes")) (constant ((type . "cd:name")) "")) (assignments ((list . "yes")) (parameter ((name . "n")) (constant ((type . "cd:number")) "")) (parameter ((name . "balance")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "align")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "style")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "pagestyle")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "textstyle")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "indicator")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "coupling")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "cd:sectionnumber")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "criterium")) (constant ((type . "cd:section")) "") (constant ((type . "local")) "") (constant ((type . "all")) "")) (parameter ((name . "distance")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "symbol")) (constant ((type . "1")) "") (constant ((type . "2")) "") (constant ((type . "...")) "") (constant ((type . "n")) "") (constant ((type . "a")) "") (constant ((type . "...")) "") (constant ((type . "none")) "")) (parameter ((name . "interaction")) (constant ((type . "pagenumber")) "") (variable ((type . "cd:text")) "")) (parameter ((name . "expansion")) (constant ((type . "yes")) "") (variable ((type . "cd:command")) "") (constant ((type . "no")) "")) (parameter ((name . "referencing")) (constant ((type . "on")) "") (constant ((type . "off")) "")) (parameter ((name . "command")) (constant ((type . "cd:oneargument")) "")) (parameter ((name . "location")) (constant ((type . "left")) "") (constant ((type . "middle")) "") (constant ((type . "right")) "")) (parameter ((name . "maxwidth")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "unknownreference")) (constant ((type . "empty")) "") (constant ((type . "none")) ""))))) (command ((name . "register") (generated . "yes")) (sequence nil (variable ((value . "register")) "")) (arguments nil (keywords ((optional . "yes")) (constant ((type . "cd:text")) "")) (index ((list . "yes")) ""))) (command ((name . "startregister") (generated . "yes")) (sequence nil (string ((value . "start")) "") (variable ((value . "register")) "")) (arguments nil (keywords ((optional . "yes")) (constant ((type . "cd:text")) "")) (index ((list . "yes")) ""))) (command ((name . "writetoregister")) (sequence nil (string ((value . "writetoregister")) "")) (arguments nil (keywords nil (constant ((type . "cd:singular")) "")) (keywords ((optional . "yes")) (constant ((type . "cd:text")) "")) (index ((list . "yes")) ""))) (command ((name . "coupledregister") (generated . "yes")) (sequence nil (string ((value . "coupled")) "") (variable ((value . "register")) "")) (arguments nil (keywords ((optional . "yes")) (constant ((type . "cd:text")) "")) (index nil ""))) (command ((name . "coupleregister")) (sequence nil (string ((value . "coupleregister")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")))) (command ((name . "seeregister") (generated . "yes")) (sequence nil (string ((value . "see")) "") (variable ((value . "register")) "")) (arguments nil (keywords ((optional . "yes")) (constant ((type . "cd:text")) "")) (content nil "") (index ((list . "yes")) ""))) (command ((name . "completeregister") (generated . "yes")) (sequence nil (string ((value . "complete")) "") (variable ((value . "register")) "")) (arguments nil (assignments ((interactive . "yes") (optional . "yes") (list . "yes")) (inherit ((name . "setupregister")) "")))) (command ((name . "placeregister") (generated . "yes")) (sequence nil (string ((value . "place")) "") (variable ((value . "register")) "")) (arguments nil (assignments ((interactive . "yes") (optional . "yes") (list . "yes")) (inherit ((name . "setupregister")) "")))) (command ((name . "definesynonyms")) (sequence nil (string ((value . "definesynonyms")) "")) (arguments nil (keywords nil (constant ((type . "cd:singular")) "")) (keywords nil (constant ((type . "cd:plural")) "")) (keywords nil (constant ((type . "cd:command")) "")) (keywords ((optional . "yes")) (constant ((type . "cd:command")) "")))) (command ((name . "setupsynonyms")) (sequence nil (string ((value . "setupsynonyms")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (assignments ((list . "yes")) (parameter ((name . "textstyle")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "synonymstyle")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "location")) (constant ((type . "left")) "") (constant ((type . "right")) "") (constant ((type . "top")) "") (constant ((type . "serried")) "") (constant ((type . "inmargin")) "") (constant ((type . "inleft")) "") (constant ((type . "inright")) "")) (parameter ((name . "width")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "state")) (constant ((type . "start")) "") (constant ((type . "stop")) "")) (parameter ((name . "criterium")) (constant ((type . "all")) "") (constant ((type . "used")) "")) (parameter ((name . "conversion")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "expansion")) (constant ((type . "yes")) "") (variable ((type . "cd:command")) "") (constant ((type . "no")) "")) (parameter ((name . "command")) (constant ((type . "cd:threearguments")) ""))))) (command ((name . "synonym") (generated . "yes")) (sequence nil (variable ((value . "synonym")) "")) (arguments nil (keywords ((optional . "yes")) (constant ((type . "cd:text")) "")) (content nil "") (content nil ""))) (command ((name . "completelistofsynonyms") (generated . "yes")) (sequence nil (string ((value . "completelistof")) "") (variable ((value . "synonyms")) ""))) (command ((name . "placelistofsynonyms") (generated . "yes")) (sequence nil (string ((value . "placelistof")) "") (variable ((value . "synonyms")) ""))) (command ((name . "loadsynonyms") (generated . "yes")) (sequence nil (string ((value . "load")) "") (variable ((value . "synonyms")) ""))) (command ((name . "definesorting")) (sequence nil (string ((value . "definesorting")) "")) (arguments nil (keywords nil (constant ((type . "cd:singular")) "")) (keywords nil (constant ((type . "cd:plural")) "")) (keywords ((optional . "yes")) (constant ((type . "cd:command")) "")))) (command ((name . "setupsorting")) (sequence nil (string ((value . "setupsorting")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (assignments ((list . "yes")) (parameter ((name . "before")) (constant ((type . "cd:command")) "")) (parameter ((name . "after")) (constant ((type . "cd:command")) "")) (parameter ((name . "command")) (constant ((type . "cd:oneargument")) "")) (parameter ((name . "state")) (constant ((type . "start")) "") (constant ((type . "stop")) "")) (parameter ((name . "criterium")) (constant ((type . "all")) "") (constant ((type . "used")) "")) (parameter ((name . "style")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "expansion")) (constant ((type . "yes")) "") (variable ((type . "cd:command")) "") (constant ((type . "no")) ""))))) (command ((name . "sort") (generated . "yes")) (sequence nil (variable ((value . "sort")) "")) (arguments nil (keywords nil (constant ((type . "cd:text")) "")) (content nil ""))) (command ((name . "completelistofsorts") (generated . "yes")) (sequence nil (string ((value . "completelistof")) "") (variable ((value . "sorts")) ""))) (command ((name . "placelistofsorts") (generated . "yes")) (sequence nil (string ((value . "placelistof")) "") (variable ((value . "sorts")) ""))) (command ((name . "loadsorts") (generated . "yes")) (sequence nil (string ((value . "load")) "") (variable ((value . "sorts")) ""))) (command ((name . "definemakeup")) (sequence nil (string ((value . "definemakeup")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (assignments ((list . "yes")) (inherit ((name . "setupmakeup")) "")))) (command ((name . "makeup") (type . "environment")) (sequence nil (string ((value . "makeup")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (assignments ((optional . "yes") (list . "yes")) (inherit ((name . "setupmakeup")) "")))) (command ((name . "setupmakeup")) (sequence nil (string ((value . "setupmakeup")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (assignments ((list . "yes")) (parameter ((name . "width")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "height")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "voffset")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "hoffset")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "page")) (constant ((type . "left")) "") (constant ((type . "yes")) "") (constant ((type . "right")) "")) (parameter ((name . "commands")) (constant ((type . "cd:command")) "")) (parameter ((name . "doublesided")) (constant ((type . "yes")) "") (constant ((type . "no")) "") (constant ((type . "empty")) "")) (parameter ((name . "headerstate")) (constant ((type . "normal")) "") (constant ((type . "stop")) "") (constant ((type . "start")) "") (constant ((type . "empty")) "") (constant ((type . "none")) "") (constant ((type . "nomarking")) "")) (parameter ((name . "footerstate")) (constant ((type . "normal")) "") (constant ((type . "stop")) "") (constant ((type . "start")) "") (constant ((type . "empty")) "") (constant ((type . "none")) "") (constant ((type . "nomarking")) "")) (parameter ((name . "textstate")) (constant ((type . "normal")) "") (constant ((type . "stop")) "") (constant ((type . "start")) "") (constant ((type . "empty")) "") (constant ((type . "none")) "") (constant ((type . "nomarking")) "")) (parameter ((name . "topstate")) (constant ((type . "stop")) "") (constant ((type . "start")) "")) (parameter ((name . "bottomstate")) (constant ((type . "stop")) "") (constant ((type . "start")) "")) (parameter ((name . "pagestate")) (constant ((type . "stop")) "") (constant ((type . "start")) "")) (parameter ((name . "color")) (constant ((type . "cd:name")) ""))))) (command ((name . "namemakeup") (type . "environment") (generated . "yes")) (sequence nil (variable ((value . "name")) "") (string ((value . "makeup")) ""))) (command ((name . "version")) (sequence nil (string ((value . "version")) "")) (arguments nil (keywords nil (constant ((type . "final") (default . "yes")) "") (constant ((type . "concept")) "") (constant ((type . "temporary")) "")))) (command ((name . "currentdate")) (sequence nil (string ((value . "currentdate")) "")) (arguments nil (keywords ((list . "yes")) (inherit ((name . "date")) "")))) (command ((name . "date")) (sequence nil (string ((value . "date")) "")) (arguments nil (assignments ((optional . "yes") (list . "yes")) (parameter ((name . "d")) (constant ((type . "cd:number")) "")) (parameter ((name . "m")) (constant ((type . "cd:number")) "")) (parameter ((name . "y")) (constant ((type . "cd:number")) ""))) (keywords ((list . "yes"))))) (command ((name . "referraldate")) (sequence nil (string ((value . "referraldate")) ""))) (command ((name . "indenting")) (sequence nil (string ((value . "indenting")) "")) (arguments nil (keywords ((list . "yes")) (constant ((type . "never") (default . "yes")) "") (constant ((type . "not")) "") (constant ((type . "no")) "") (constant ((type . "yes")) "") (constant ((type . "always")) "") (constant ((type . "first")) "") (constant ((type . "next")) "")))) (command ((name . "noindenting")) (sequence nil (string ((value . "noindenting")) ""))) (command ((name . "blank")) (sequence nil (string ((value . "blank")) "")) (arguments nil (keywords ((optional . "yes") (list . "yes")) (constant ((type . "small")) "") (constant ((type . "medium")) "") (constant ((type . "big") (default . "yes")) "") (constant ((type . "nowhite")) "") (constant ((type . "back")) "") (constant ((type . "white")) "") (constant ((type . "disable")) "") (constant ((type . "force")) "") (constant ((type . "reset")) "") (constant ((type . "line")) "") (constant ((type . "halfline")) "") (variable ((type . "cd:formula")) "") (constant ((type . "fixed")) "") (constant ((type . "flexible")) "") (constant ((type . "none")) "")))) (command ((name . "packed") (type . "environment")) (sequence nil (string ((value . "packed")) "")) (arguments nil (keywords ((optional . "yes")) (constant ((type . "blank")) "")))) (command ((name . "unpacked") (type . "environment")) (sequence nil (string ((value . "unpacked")) ""))) (command ((name . "linecorrection") (type . "environment")) (sequence nil (string ((value . "linecorrection")) ""))) (command ((name . "correctwhitespace")) (sequence nil (string ((value . "correctwhitespace")) "")) (arguments nil (content nil ""))) (command ((name . "postponing") (type . "environment")) (sequence nil (string ((value . "postponing")) ""))) (command ((name . "local") (type . "environment")) (sequence nil (string ((value . "local")) ""))) (command ((name . "narrower") (type . "environment")) (sequence nil (string ((value . "narrower")) "")) (arguments nil (keywords ((optional . "yes") (list . "yes")) (constant ((type . "left")) "") (constant ((type . "middle") (default . "yes")) "") (constant ((type . "right")) "")))) (command ((name . "hiding") (type . "environment")) (sequence nil (string ((value . "hiding")) ""))) (command ((name . "setupalign")) (sequence nil (string ((value . "setupalign")) "")) (arguments nil (keywords nil (constant ((type . "width")) "") (constant ((type . "left")) "") (constant ((type . "right")) "") (constant ((type . "middle")) "") (constant ((type . "inner")) "") (constant ((type . "outer")) "") (constant ((type . "wide")) "") (constant ((type . "broad")) "") (constant ((type . "height")) "") (constant ((type . "bottom")) "") (constant ((type . "line")) "") (constant ((type . "reset")) "") (constant ((type . "hanging")) "") (constant ((type . "nothanging")) "") (constant ((type . "hyphenated")) "") (constant ((type . "nothyphenated")) "")))) (command ((name . "alignment") (type . "environment")) (sequence nil (string ((value . "alignment")) "")) (arguments nil (keywords ((optional . "yes")) (inherit ((name . "setupalign")) "")))) (command ((name . "setupspacing")) (sequence nil (string ((value . "setupspacing")) "")) (arguments nil (keywords nil (constant ((type . "broad")) "") (constant ((type . "packed")) "")))) (command ((name . "setuptolerance")) (sequence nil (string ((value . "setuptolerance")) "")) (arguments nil (keywords ((list . "yes")) (constant ((type . "horizontal")) "") (constant ((type . "vertical")) "") (constant ((type . "stretch")) "") (constant ((type . "space")) "") (constant ((type . "verystrict") (default . "yes")) "") (constant ((type . "strict")) "") (constant ((type . "tolerant")) "") (constant ((type . "verytolerant")) "")))) (command ((name . "pagetype")) (sequence nil (string ((value . "pagetype")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")))) (command ((name . "processpage")) (sequence nil (string ((value . "processpage")) "")) (arguments nil (keywords ((list . "yes")) (constant ((type . "cd:name")) "")) (keywords nil (constant ((type . "yes") (default . "yes")) "") (constant ((type . "no")) "")))) (command ((name . "couplepage")) (sequence nil (string ((value . "couplepage")) "")) (arguments nil (keywords ((list . "yes")) (constant ((type . "cd:name")) "")) (assignments ((list . "yes")) (parameter ((name . "option")) (constant ((type . "doublesided")) "")) (parameter ((name . "before")) (constant ((type . "cd:command")) "")) (parameter ((name . "after")) (constant ((type . "cd:command")) ""))))) (command ((name . "position")) (sequence nil (string ((value . "position")) "")) (arguments nil (position ((list . "yes")) "") (content nil ""))) (command ((name . "setupscreens")) (sequence nil (string ((value . "setupscreens")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "method")) (constant ((type . "dot")) "") (constant ((type . "rule")) "") (constant ((type . "external")) "")) (parameter ((name . "resolution")) (constant ((type . "cd:number")) "")) (parameter ((name . "factor")) (constant ((type . "cd:number")) "")) (parameter ((name . "screen")) (constant ((type . "cd:number")) ""))))) (command ((name . "setupbackgrounds")) (sequence nil (string ((value . "setupbackgrounds")) "")) (arguments nil (keywords ((optional . "yes")) (constant ((type . "top")) "") (constant ((type . "header")) "") (variable ((type . "cd:text")) "") (constant ((type . "footer")) "") (constant ((type . "bottom")) "") (constant ((type . "page")) "") (constant ((type . "paper")) "") (constant ((type . "leftpage")) "") (constant ((type . "rightpage")) "")) (keywords ((optional . "yes") (list . "yes")) (constant ((type . "leftedge")) "") (constant ((type . "leftmargin")) "") (variable ((type . "cd:text")) "") (constant ((type . "rightmargin")) "") (constant ((type . "rightedge")) "")) (assignments ((list . "yes")) (parameter ((name . "state")) (constant ((type . "start")) "") (constant ((type . "stop")) "") (variable ((type . "cd:repeat")) "")) (inherit ((name . "setupframed")) "")))) (command ((name . "buffer") (type . "environment") (generated . "yes")) (sequence nil (variable ((value . "buffer")) "")) (arguments nil (keywords ((optional . "yes")) (constant ((type . "cd:name")) "")))) (command ((name . "getbuffer")) (sequence nil (string ((value . "getbuffer")) "")) (arguments nil (keywords ((optional . "yes")) (constant ((type . "cd:name")) "")))) (command ((name . "typebuffer")) (sequence nil (string ((value . "typebuffer")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")))) (command ((name . "definebuffer")) (sequence nil (string ((value . "definebuffer")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")))) (command ((name . "setupbuffer")) (sequence nil (string ((value . "setupbuffer")) "")) (arguments nil (keywords ((optional . "yes")) (constant ((type . "cd:name")) "")) (assignments ((list . "yes")) (parameter ((name . "paragraph")) (constant ((type . "cd:number")) "")) (parameter ((name . "before")) (constant ((type . "cd:command")) "")) (parameter ((name . "after")) (constant ((type . "cd:command")) ""))))) (command ((name . "defineblock")) (sequence nil (string ((value . "defineblock")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")))) (command ((name . "nomoreblocks")) (sequence nil (string ((value . "nomoreblocks")) ""))) (command ((name . "hideblocks")) (sequence nil (string ((value . "hideblocks")) "")) (arguments nil (keywords ((list . "yes")) (constant ((type . "cd:name")) "")) (keywords ((optional . "yes") (list . "yes")) (constant ((type . "cd:name")) "")))) (command ((name . "keepblocks")) (sequence nil (string ((value . "keepblocks")) "")) (arguments nil (keywords ((list . "yes")) (constant ((type . "cd:name")) "")) (keywords ((optional . "yes") (list . "yes")) (constant ((type . "all")) "") (constant ((type . "cd:name")) "")))) (command ((name . "useblocks")) (sequence nil (string ((value . "useblocks")) "")) (arguments nil (keywords ((list . "yes")) (constant ((type . "cd:name")) "")) (keywords ((optional . "yes") (list . "yes")) (constant ((type . "cd:name")) "")))) (command ((name . "processblocks")) (sequence nil (string ((value . "processblocks")) "")) (arguments nil (keywords ((list . "yes")) (constant ((type . "cd:name")) "")) (keywords ((optional . "yes") (list . "yes")) (constant ((type . "cd:name")) "")))) (command ((name . "selectblocks")) (sequence nil (string ((value . "selectblocks")) "")) (arguments nil (keywords ((list . "yes")) (constant ((type . "cd:name")) "")) (keywords ((optional . "yes") (list . "yes")) (constant ((type . "cd:name")) "")) (assignments ((optional . "yes")) (parameter ((name . "criterium")) (constant ((type . "all")) "") (constant ((type . "cd:section")) ""))))) (command ((name . "setupblock")) (sequence nil (string ((value . "setupblock")) "")) (arguments nil (keywords ((list . "yes")) (constant ((type . "cd:name")) "")) (assignments ((list . "yes")) (parameter ((name . "before")) (constant ((type . "cd:command")) "")) (parameter ((name . "after")) (constant ((type . "cd:command")) "")) (parameter ((name . "inner")) (constant ((type . "cd:command")) "")) (parameter ((name . "style")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "file")) (constant ((type . "cd:file")) ""))))) (command ((name . "formula") (type . "environment") (generated . "yes")) (sequence nil (variable ((value . "formula")) ""))) (command ((name . "mathematics")) (sequence nil (string ((value . "mathematics")) "")) (arguments nil (content nil ""))) (command ((name . "placeformula")) (sequence nil (string ((value . "placeformula")) "")) (arguments nil (reference ((optional . "yes") (list . "yes")) "") (content ((optional . "yes")) "") (displaymath nil ""))) (command ((name . "placesubformula")) (sequence nil (string ((value . "placesubformula")) "")) (arguments nil (reference ((optional . "yes") (list . "yes")) "") (content ((optional . "yes")) "") (displaymath nil ""))) (command ((name . "placefloat") (generated . "yes")) (sequence nil (string ((value . "place")) "") (variable ((value . "float")) "")) (arguments nil (keywords ((optional . "yes")) (constant ((type . "left")) "") (constant ((type . "right")) "") (constant ((type . "here") (default . "yes")) "") (constant ((type . "top")) "") (constant ((type . "bottom")) "") (constant ((type . "inleft")) "") (constant ((type . "inright")) "") (constant ((type . "inmargin")) "") (constant ((type . "margin")) "") (constant ((type . "leftmargin")) "") (constant ((type . "rightmargin")) "") (constant ((type . "leftedge")) "") (constant ((type . "rightedge")) "") (constant ((type . "innermargin")) "") (constant ((type . "outermargin")) "") (constant ((type . "inneredge")) "") (constant ((type . "outeredge")) "") (constant ((type . "inner")) "") (constant ((type . "outer")) "") (constant ((type . "regel")) "") (constant ((type . "high")) "") (constant ((type . "low")) "") (constant ((type . "fit")) "") (constant ((type . "page")) "") (constant ((type . "opposite")) "") (constant ((type . "always")) "") (constant ((type . "force")) "") (constant ((type . "tall")) "") (constant ((type . "reset")) "") (constant ((type . "line")) "") (constant ((type . "height")) "") (constant ((type . "depth")) "")) (reference ((optional . "yes") (list . "yes")) "") (content nil "") (content nil ""))) (command ((name . "reservefloat") (generated . "yes")) (sequence nil (string ((value . "reserve")) "") (variable ((value . "float")) "")) (arguments nil (assignments ((optional . "yes") (list . "yes")) (parameter ((name . "height")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "width")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "frame")) (constant ((type . "on")) "") (constant ((type . "off")) ""))) (keywords ((optional . "yes")) (constant ((type . "cd:text")) "")) (reference ((optional . "yes") (list . "yes")) "") (content nil ""))) (command ((name . "definefloat")) (sequence nil (string ((value . "definefloat")) "")) (arguments nil (keywords nil (constant ((type . "cd:singular")) "")) (keywords nil (constant ((type . "cd:plural")) "")))) (command ((name . "setupfloat")) (sequence nil (string ((value . "setupfloat")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (assignments ((list . "yes")) (parameter ((name . "height")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "width")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "maxheight")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "maxwidth")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "minwidth")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "default")) (constant ((type . "cd:name")) "")) (parameter ((name . "pageboundaries")) (constant ((type . "cd:list")) "")) (parameter ((name . "leftmargindistance")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "rightmargindistance")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "location")) (constant ((type . "left")) "") (constant ((type . "middle")) "") (constant ((type . "right")) "")) (inherit ((name . "setupframed")) "")))) (command ((name . "floattext") (type . "environment") (generated . "yes")) (sequence nil (variable ((value . "float")) "") (string ((value . "text")) "")) (arguments nil (keywords ((optional . "yes")) (constant ((type . "left")) "") (constant ((type . "right")) "") (constant ((type . "high")) "") (constant ((type . "middle")) "") (constant ((type . "low")) "") (constant ((type . "offset")) "") (constant ((type . "tall")) "")) (reference ((optional . "yes")) "") (content nil "") (content nil ""))) (command ((name . "placelistoffloats") (generated . "yes")) (sequence nil (string ((value . "placelistof")) "") (variable ((value . "floats")) ""))) (command ((name . "completelistoffloats") (generated . "yes")) (sequence nil (string ((value . "completelistof")) "") (variable ((value . "floats")) ""))) (command ((name . "referral")) (sequence nil (string ((value . "referral")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "bet")) (constant ((type . "cd:text")) "")) (parameter ((name . "ken")) (constant ((type . "cd:text")) "")) (parameter ((name . "dat")) (constant ((type . "cd:text")) "")) (parameter ((name . "from")) (constant ((type . "cd:text")) "")) (parameter ((name . "to")) (constant ((type . "cd:text")) "")) (parameter ((name . "ref")) (constant ((type . "cd:text")) ""))))) (command ((name . "selectpaper")) (sequence nil (string ((value . "selectpaper")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "family")) (constant ((type . "1")) "") (constant ((type . "2")) ""))))) (command ((name . "couplepaper")) (sequence nil (string ((value . "couplepaper")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")))) (command ((name . "chem")) (sequence nil (string ((value . "chem")) "")) (arguments nil (content nil "") (content nil "") (content nil ""))) (command ((name . "fraction")) (sequence nil (string ((value . "fraction")) "")) (arguments nil (content nil "") (content nil ""))) (command ((name . "periods")) (sequence nil (string ((value . "periods")) "")) (arguments nil (keywords nil (constant ((type . "cd:number")) "")))) (command ((name . "domicile")) (sequence nil (string ((value . "domicile")) "")) (arguments nil (content nil ""))) (command ((name . "items")) (sequence nil (string ((value . "items")) "")) (arguments nil (assignments ((optional . "yes") (list . "yes")) (inherit ((name . "setupitems")) "")) (content ((list . "yes")) ""))) (command ((name . "setupitems")) (sequence nil (string ((value . "setupitems")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "location")) (constant ((type . "left")) "") (constant ((type . "right")) "") (constant ((type . "inmargin")) "") (constant ((type . "top")) "") (constant ((type . "bottom")) "")) (parameter ((name . "symbol")) (constant ((type . "1")) "") (constant ((type . "2")) "") (constant ((type . "...")) "") (constant ((type . "n")) "") (constant ((type . "a")) "") (constant ((type . "...")) "") (constant ((type . "cd:text")) "") (constant ((type . "none")) "")) (parameter ((name . "width")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "n")) (constant ((type . "cd:number")) "") (constant ((type . "unknown")) "")) (parameter ((name . "before")) (constant ((type . "cd:command")) "")) (parameter ((name . "inbetween")) (constant ((type . "cd:command")) "")) (parameter ((name . "align")) (constant ((type . "left")) "") (constant ((type . "right")) "") (constant ((type . "middle")) "") (constant ((type . "margin")) "")) (parameter ((name . "after")) (constant ((type . "cd:command")) ""))))) (command ((name . "quotation") (type . "environment")) (sequence nil (string ((value . "quotation")) "")) (arguments nil (keywords ((list . "yes")) (constant ((type . "left")) "") (constant ((type . "middle") (default . "yes")) "") (constant ((type . "right")) "")))) (command ((name . "quotation")) (sequence nil (string ((value . "quotation")) "")) (arguments nil (content nil ""))) (command ((name . "quote")) (sequence nil (string ((value . "quote")) "")) (arguments nil (content nil ""))) (command ((name . "setupquote")) (sequence nil (string ((value . "setupquote")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "before")) (constant ((type . "cd:command")) "")) (parameter ((name . "after")) (constant ((type . "cd:command")) "")) (parameter ((name . "style")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "color")) (constant ((type . "cd:name")) "")) (parameter ((name . "location")) (variable ((type . "cd:text")) "") (constant ((type . "margin")) ""))))) (command ((name . "adding")) (sequence nil (string ((value . "adding")) "")) (arguments nil (keywords nil (constant ((type . "small")) "") (constant ((type . "medium") (default . "yes")) "") (constant ((type . "big")) "")))) (command ((name . "defineparagraphs")) (sequence nil (string ((value . "defineparagraphs")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (assignments ((list . "yes")) (parameter ((name . "n")) (constant ((type . "cd:number")) "")) (parameter ((name . "rule")) (constant ((type . "on")) "") (constant ((type . "off")) "")) (parameter ((name . "height")) (constant ((type . "fit")) "") (constant ((type . "cd:dimension")) "")) (parameter ((name . "before")) (constant ((type . "cd:command")) "")) (parameter ((name . "after")) (constant ((type . "cd:command")) "")) (parameter ((name . "inner")) (constant ((type . "cd:command")) "")) (parameter ((name . "distance")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "tolerance")) (constant ((type . "verystrict")) "") (constant ((type . "strict")) "") (constant ((type . "tolerant")) "") (constant ((type . "verytolerant")) "") (constant ((type . "stretch")) "")) (parameter ((name . "align")) (constant ((type . "left")) "") (constant ((type . "right")) "") (constant ((type . "middle")) ""))))) (command ((name . "paragraph") (generated . "yes")) (sequence nil (variable ((value . "paragraph")) ""))) (command ((name . "paragraph") (type . "environment") (generated . "yes")) (sequence nil (variable ((value . "paragraph")) ""))) (command ((name . "setupparagraphs")) (sequence nil (string ((value . "setupparagraphs")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (keywords ((optional . "yes")) (constant ((type . "cd:number")) "") (constant ((type . "each")) "")) (assignments ((list . "yes")) (parameter ((name . "style")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "width")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "height")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "align")) (constant ((type . "left")) "") (constant ((type . "right")) "") (constant ((type . "middle")) "") (constant ((type . "width")) "")) (parameter ((name . "tolerance")) (constant ((type . "verystrict")) "") (constant ((type . "strict")) "") (constant ((type . "tolerant")) "") (constant ((type . "verytolerant")) "") (constant ((type . "stretch")) "")) (parameter ((name . "distance")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "before")) (constant ((type . "cd:command")) "")) (parameter ((name . "after")) (constant ((type . "cd:command")) "")) (parameter ((name . "inner")) (constant ((type . "cd:command")) "")) (parameter ((name . "command")) (constant ((type . "cd:command")) "")) (parameter ((name . "rule")) (constant ((type . "on")) "") (constant ((type . "off")) ""))))) (command ((name . "setuptab")) (sequence nil (string ((value . "setuptab")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "sample")) (constant ((type . "cd:text")) "")) (parameter ((name . "width")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "headstyle")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "location")) (constant ((type . "left")) "") (constant ((type . "right")) ""))))) (command ((name . "tab")) (sequence nil (string ((value . "tab")) "")) (arguments nil (content nil "") (nothing nil ""))) (command ((name . "document") (type . "environment")) (sequence nil (string ((value . "document")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")))) (command ((name . "letters")) (sequence nil (string ((value . "letters")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")))) (command ((name . "labels")) (sequence nil (string ((value . "labels")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")))) (command ((name . "setupcorrespondence")) (sequence nil (string ((value . "setupcorrespondence")) "")) (arguments nil (keywords ((list . "yes")) (constant ((type . "formeel")) "") (constant ((type . "informeel")) "") (constant ((type . "rekening")) "") (constant ((type . "ls")) "") (constant ((type . "high")) "") (constant ((type . "middle")) "") (constant ((type . "low")) "")))) (command ((name . "setupsheets")) (sequence nil (string ((value . "setupsheets")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "alternative")) (constant ((type . "cd:number")) "")) (parameter ((name . "text")) (constant ((type . "cd:text")) "")) (parameter ((name . "size")) (constant ((type . "small")) "") (constant ((type . "medium")) "") (constant ((type . "big")) "")) (parameter ((name . "style")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "number")) (constant ((type . "cd:number")) "") (constant ((type . "joinedup")) ""))))) (command ((name . "sheet")) (sequence nil (string ((value . "sheet")) "")) (arguments nil (keywords nil (constant ((type . "cd:text")) "")))) (command ((name . "setupstickers")) (sequence nil (string ((value . "setupstickers")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "alternative")) (constant ((type . "a")) "")) (parameter ((name . "n")) (constant ((type . "cd:number")) "") (constant ((type . "all")) "")) (parameter ((name . "location")) (constant ((type . "margin")) "") (constant ((type . "left")) "") (constant ((type . "right")) "") (constant ((type . "middle")) ""))))) (command ((name . "definetabulate")) (sequence nil (string ((value . "definetabulate")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (keywords ((optional . "yes")) (constant ((type . "cd:name")) "")) (keywords nil (constant ((type . "cd:text")) "")))) (command ((name . "tabulate") (type . "environment") (generated . "yes")) (sequence nil (variable ((value . "tabulate")) "")) (arguments nil (keywords ((optional . "yes")) (constant ((type . "cd:text")) "")) (assignments ((optional . "yes") (list . "yes")) (inherit ((name . "useexternalfigure")) "")))) (command ((name . "setuptabulate")) (sequence nil (string ((value . "setuptabulate")) "")) (arguments nil (keywords ((optional . "yes")) (constant ((type . "cd:name")) "")) (assignments ((list . "yes")) (parameter ((name . "unit")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "indenting")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "before")) (constant ((type . "cd:command")) "")) (parameter ((name . "after")) (constant ((type . "cd:command")) "")) (parameter ((name . "inner")) (constant ((type . "cd:command")) "")) (parameter ((name . "EQ")) (constant ((type . "cd:text")) "")) (parameter ((name . "rulecolor")) (constant ((type . "cd:name")) "")) (parameter ((name . "align")) (constant ((type . "left")) "") (constant ((type . "middle")) "") (constant ((type . "right")) "") (constant ((type . "normal")) "")) (parameter ((name . "rulethickness")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "distance")) (constant ((type . "blank")) "") (constant ((type . "grid")) "") (constant ((type . "depth")) "") (constant ((type . "cd:dimension")) "") (constant ((type . "small")) "") (constant ((type . "medium")) "") (constant ((type . "big")) "") (constant ((type . "none")) "")) (parameter ((name . "bodyfont")) (constant ((type . "5pt")) "") (constant ((type . "...")) "") (constant ((type . "12pt")) "") (constant ((type . "small")) "") (constant ((type . "big")) "")) (parameter ((name . "rule")) (constant ((type . "normal")) "") (constant ((type . "line")) "")) (parameter ((name . "split")) (constant ((type . "yes")) "") (constant ((type . "no")) ""))))) (command ((name . "setuptables")) (sequence nil (string ((value . "setuptables")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "distance")) (constant ((type . "small")) "") (constant ((type . "medium")) "") (constant ((type . "big")) "")) (parameter ((name . "bodyfont")) (constant ((type . "5pt")) "") (constant ((type . "...")) "") (constant ((type . "12pt")) "") (constant ((type . "small")) "") (constant ((type . "big")) "")) (parameter ((name . "HL")) (constant ((type . "cd:number")) "") (constant ((type . "small")) "") (constant ((type . "medium")) "") (constant ((type . "big")) "") (constant ((type . "none")) "")) (parameter ((name . "VL")) (constant ((type . "cd:number")) "") (constant ((type . "small")) "") (constant ((type . "medium")) "") (constant ((type . "big")) "") (constant ((type . "none")) "")) (parameter ((name . "depth")) (constant ((type . "cd:number")) "") (constant ((type . "strut")) "")) (parameter ((name . "height")) (constant ((type . "cd:number")) "") (constant ((type . "strut")) "")) (parameter ((name . "rulethickness")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "rulecolor")) (constant ((type . "cd:name")) "")) (parameter ((name . "align")) (constant ((type . "right")) "") (constant ((type . "middle")) "") (constant ((type . "left")) "") (constant ((type . "normal")) "")) (parameter ((name . "commands")) (constant ((type . "cd:command")) "")) (parameter ((name . "align")) (constant ((type . "left")) "") (constant ((type . "middle")) "") (constant ((type . "right")) "") (constant ((type . "normal")) "")) (parameter ((name . "background")) (constant ((type . "screen")) "") (constant ((type . "color")) "") (constant ((type . "none")) "")) (parameter ((name . "backgroundscreen")) (constant ((type . "cd:number")) "")) (parameter ((name . "backgroundcolor")) (constant ((type . "cd:name")) "")) (parameter ((name . "bodyfont")) (constant ((type . "5pt")) "") (constant ((type . "...")) "") (constant ((type . "12pt")) "") (constant ((type . "small")) "") (constant ((type . "big")) ""))))) (command ((name . "table") (type . "environment")) (sequence nil (string ((value . "table")) "")) (arguments nil (keywords nil (constant ((type . "cd:text")) "") (constant ((type . "cd:name")) "")))) (command ((name . "tables") (type . "environment")) (sequence nil (string ((value . "tables")) "")) (arguments nil (keywords nil (constant ((type . "cd:text")) "") (constant ((type . "cd:name")) "")))) (command ((name . "definetabletemplate")) (sequence nil (string ((value . "definetabletemplate")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (keywords nil (constant ((type . "cd:text")) "")) (keywords ((optional . "yes")) (constant ((type . "cd:text")) "")) (keywords ((optional . "yes")) (constant ((type . "cd:text")) "")))) (command ((name . "useexternalfiles")) (sequence nil (string ((value . "useexternalfiles")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (assignments ((list . "yes")) (parameter ((name . "bodyfont")) (constant ((type . "5pt")) "") (constant ((type . "...")) "") (constant ((type . "12pt")) "") (constant ((type . "small")) "") (constant ((type . "big")) "")) (parameter ((name . "file")) (constant ((type . "cd:file")) ""))))) (command ((name . "useexternalfile")) (sequence nil (string ((value . "useexternalfile")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (keywords nil (constant ((type . "cd:name")) "")) (keywords nil (constant ((type . "cd:file")) "")) (assignments ((list . "yes")) (parameter ((name . "bodyfont")) (constant ((type . "5pt")) "") (constant ((type . "...")) "") (constant ((type . "12pt")) "") (constant ((type . "small")) "") (constant ((type . "big")) ""))))) (command ((name . "useexternalfigure")) (sequence nil (string ((value . "useexternalfigure")) "")) (arguments nil (keywords ((optional . "yes")) (constant ((type . "cd:name")) "")) (keywords nil (constant ((type . "cd:file")) "")) (assignments ((optional . "yes") (list . "yes")) (parameter ((name . "scale")) (constant ((type . "cd:number")) "")) (parameter ((name . "factor")) (constant ((type . "max")) "") (constant ((type . "fit")) "") (constant ((type . "broad")) "")) (parameter ((name . "wfactor")) (constant ((type . "cd:number")) "") (constant ((type . "max")) "") (constant ((type . "broad")) "") (constant ((type . "fit")) "")) (parameter ((name . "hfactor")) (constant ((type . "cd:number")) "") (constant ((type . "max")) "") (constant ((type . "broad")) "") (constant ((type . "fit")) "")) (parameter ((name . "width")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "height")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "frame")) (constant ((type . "on")) "") (constant ((type . "off")) "")) (parameter ((name . "preset")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "display")) (constant ((type . "cd:file")) "")) (parameter ((name . "preview")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "repeat")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "object")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "type")) (constant ((type . "eps")) "") (constant ((type . "mps")) "") (constant ((type . "pdf")) "") (constant ((type . "tif")) "") (constant ((type . "png")) "") (constant ((type . "jpg")) "") (constant ((type . "mov")) "") (variable ((type . "cd:tex")) "")) (parameter ((name . "method")) (constant ((type . "eps")) "") (constant ((type . "mps")) "") (constant ((type . "pdf")) "") (constant ((type . "tif")) "") (constant ((type . "png")) "") (constant ((type . "jpg")) "") (constant ((type . "mov")) "") (variable ((type . "cd:tex")) ""))))) (command ((name . "externalfigure")) (sequence nil (string ((value . "externalfigure")) "")) (arguments nil (keywords nil (constant ((type . "cd:file")) "")) (assignments ((list . "yes")) (inherit ((name . "useexternalfigure")) "")))) (command ((name . "setupexternalfigures")) (sequence nil (string ((value . "setupexternalfigures")) "")) (arguments nil (assignments nil (parameter ((name . "option")) (constant ((type . "frame")) "") (constant ((type . "empty")) "") (constant ((type . "test")) "")) (parameter ((name . "object")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "frame")) (constant ((type . "on")) "") (constant ((type . "off")) "")) (parameter ((name . "ymax")) (constant ((type . "cd:number")) "")) (parameter ((name . "xmax")) (constant ((type . "cd:number")) "")) (parameter ((name . "directory")) (constant ((type . "cd:text")) "")) (parameter ((name . "location")) (constant ((type . "local")) "") (constant ((type . "global")) "") (constant ((type . "default")) "") (constant ((type . "none")) "")) (parameter ((name . "maxwidth")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "maxheight")) (constant ((type . "cd:dimension")) ""))))) (command ((name . "showexternalfigures")) (sequence nil (string ((value . "showexternalfigures")) "")) (arguments nil (assignments ((optional . "yes") (list . "yes")) (parameter ((name . "alternative")) (constant ((type . "a")) "") (constant ((type . "b")) "") (constant ((type . "c")) ""))))) (command ((name . "useexternalsoundtrack")) (sequence nil (string ((value . "useexternalsoundtrack")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (keywords nil (constant ((type . "cd:file")) "")))) (command ((name . "name")) (sequence nil (string ((value . "name")) "")) (arguments nil (content nil ""))) (command ((name . "legend") (type . "environment")) (sequence nil (string ((value . "legend")) "")) (arguments nil (keywords ((optional . "yes")) (constant ((type . "two")) "")) (tex ((command . "leg")) "") (nothing nil "") (nothing ((separator . "backslash")) "") (nothing ((separator . "backslash")) "") (tex ((separator . "backslash") (command . "leg")) ""))) (command ((name . "fact") (type . "environment")) (sequence nil (string ((value . "fact")) "")) (arguments nil (tex ((command . "fact")) "") (nothing nil "") (nothing ((separator . "backslash")) "") (nothing ((separator . "backslash")) "") (tex ((separator . "backslash") (command . "fact")) ""))) (command ((name . "rotate")) (sequence nil (string ((value . "rotate")) "")) (arguments nil (assignments ((optional . "yes") (list . "yes")) (inherit ((name . "setuprotate")) "")) (content nil ""))) (command ((name . "setuprotate")) (sequence nil (string ((value . "setuprotate")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "rotation")) (constant ((type . "cd:number")) "")) (inherit ((name . "setupframed")) "")))) (command ((name . "mirror")) (sequence nil (string ((value . "mirror")) "")) (arguments nil (content nil ""))) (command ((name . "scale")) (sequence nil (string ((value . "scale")) "")) (arguments nil (assignments ((optional . "yes") (list . "yes")) (parameter ((name . "sx")) (constant ((type . "cd:number")) "")) (parameter ((name . "sy")) (constant ((type . "cd:number")) ""))) (content nil ""))) (command ((name . "setupcombinations")) (sequence nil (string ((value . "setupcombinations")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "before")) (constant ((type . "commando")) "")) (parameter ((name . "inbetween")) (constant ((type . "commando")) "")) (parameter ((name . "after")) (constant ((type . "commando")) "")) (parameter ((name . "distance")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "height")) (constant ((type . "cd:dimension")) "") (constant ((type . "fit")) "")) (parameter ((name . "width")) (constant ((type . "cd:dimension")) "") (constant ((type . "fit")) "")) (parameter ((name . "location")) (constant ((type . "boven")) "") (constant ((type . "midden")) "") (constant ((type . "onder")) "") (constant ((type . "links")) "") (constant ((type . "rechts")) "")) (parameter ((name . "align")) (constant ((type . "no")) "") (constant ((type . "left")) "") (constant ((type . "right")) "") (constant ((type . "middle")) "") (constant ((type . "normal")) "")) (parameter ((name . "style")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...cd:command")) "")) (parameter ((name . "color")) (constant ((type . "cd:name")) ""))))) (command ((name . "combination") (type . "environment")) (sequence nil (string ((value . "combination")) "")) (arguments nil (keywords nil (constant ((type . "cd:matrix")) "")))) (command ((name . "placesidebyside")) (sequence nil (string ((value . "placesidebyside")) "")) (arguments nil (content nil "") (content nil ""))) (command ((name . "placeontopofeachother")) (sequence nil (string ((value . "placeontopofeachother")) "")) (arguments nil (content nil "") (content nil ""))) (command ((name . "overlay") (type . "environment")) (sequence nil (string ((value . "overlay")) "")) (arguments nil (content nil "") (content nil ""))) (command ((name . "overview") (type . "environment")) (sequence nil (string ((value . "overview")) "")) (arguments nil (keywords ((list . "yes")) (constant ((type . "cd:name")) "")))) (command ((name . "setupinteractionscreen")) (sequence nil (string ((value . "setupinteractionscreen")) "")) (arguments nil (assignments ((interactive . "exclusive") (list . "yes")) (parameter ((name . "width")) (constant ((type . "cd:dimension")) "") (constant ((type . "fit")) "") (constant ((type . "max")) "")) (parameter ((name . "height")) (constant ((type . "cd:dimension")) "") (constant ((type . "fit")) "") (constant ((type . "max")) "")) (parameter ((name . "backspace")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "topspace")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "horoffset")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "veroffset")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "option")) (constant ((type . "max")) "") (constant ((type . "fit")) "") (constant ((type . "doublesided")) "") (constant ((type . "bookmark")) "")) (parameter ((name . "delay")) (constant ((type . "cd:number")) "") (constant ((type . "none")) ""))))) (command ((name . "screen")) (sequence nil (string ((value . "screen")) ""))) (command ((name . "setuppagetransitions")) (sequence nil (string ((value . "setuppagetransitions")) "")) (arguments nil (keywords ((optional . "yes") (list . "yes")) (constant ((type . "reset")) "") (constant ((type . "cd:number")) "")))) (command ((name . "setupinteraction")) (sequence nil (string ((value . "setupinteraction")) "")) (arguments nil (assignments ((interactive . "exclusive") (list . "yes")) (parameter ((name . "state")) (constant ((type . "start")) "") (constant ((type . "stop")) "")) (parameter ((name . "menu")) (constant ((type . "on")) "") (constant ((type . "off")) "")) (parameter ((name . "page")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "click")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "split")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "display")) (constant ((type . "new")) "")) (parameter ((name . "openaction")) (constant ((type . "cd:reference")) "")) (parameter ((name . "closeaction")) (constant ((type . "cd:reference")) "")) (parameter ((name . "openpageaction")) (constant ((type . "cd:reference")) "")) (parameter ((name . "closepageaction")) (constant ((type . "cd:reference")) "")) (parameter ((name . "calculate")) (constant ((type . "cd:name")) "")) (parameter ((name . "strut")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "width")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "height")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "depth")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "style")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...cd:command")) "")) (parameter ((name . "color")) (constant ((type . "cd:name")) "")) (parameter ((name . "contrastcolor")) (constant ((type . "cd:name")) "")) (parameter ((name . "symbolset")) (constant ((type . "cd:name")) "")) (parameter ((name . "title")) (constant ((type . "cd:text")) "")) (parameter ((name . "subtitle")) (constant ((type . "cd:text")) "")) (parameter ((name . "author")) (constant ((type . "cd:text")) "")) (parameter ((name . "date")) (constant ((type . "cd:text")) ""))))) (command ((name . "setupinteractionmenu")) (sequence nil (string ((value . "setupinteractionmenu")) "")) (arguments nil (keywords ((interactive . "exclusive") (list . "yes")) (constant ((type . "left")) "") (constant ((type . "right")) "") (constant ((type . "top")) "") (constant ((type . "bottom")) "") (constant ((type . "cd:name")) "")) (assignments ((optional . "yes") (list . "yes")) (parameter ((name . "before")) (constant ((type . "cd:command")) "")) (parameter ((name . "after")) (constant ((type . "cd:command")) "")) (parameter ((name . "inbetween")) (constant ((type . "cd:command")) "")) (parameter ((name . "left")) (constant ((type . "cd:command")) "")) (parameter ((name . "right")) (constant ((type . "cd:command")) "")) (parameter ((name . "middle")) (constant ((type . "cd:command")) "")) (parameter ((name . "state")) (constant ((type . "start")) "") (constant ((type . "stop")) "") (constant ((type . "none")) "") (constant ((type . "local")) "")) (parameter ((name . "style")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...cd:command")) "")) (parameter ((name . "color")) (constant ((type . "cd:name")) "")) (parameter ((name . "distance")) (constant ((type . "overlay")) "") (constant ((type . "cd:dimension")) "")) (parameter ((name . "samepage")) (constant ((type . "yes")) "") (constant ((type . "empty")) "") (constant ((type . "no")) "") (constant ((type . "none")) "")) (parameter ((name . "unknownreference")) (constant ((type . "yes")) "") (constant ((type . "empty")) "") (constant ((type . "no")) "") (constant ((type . "none")) "")) (parameter ((name . "leftoffset")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "rightoffset")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "topoffset")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "bottomoffset")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "position")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (inherit ((name . "setupframed")) "")))) (command ((name . "defineinteractionmenu")) (sequence nil (string ((value . "defineinteractionmenu")) "")) (arguments nil (keywords ((interactive . "exclusive")) (constant ((type . "left")) "") (constant ((type . "right")) "") (constant ((type . "top")) "") (constant ((type . "bottom")) "") (constant ((type . "cd:name")) "")) (keywords ((optional . "yes")) (constant ((type . "left")) "") (constant ((type . "right")) "") (constant ((type . "top")) "") (constant ((type . "bottom")) "") (constant ((type . "cd:name")) "")) (assignments ((optional . "yes") (list . "yes")) (inherit ((name . "setupinteractionmenu")) "")))) (command ((name . "interactionmenu") (type . "environment")) (sequence nil (string ((value . "interactionmenu")) "")) (arguments nil (keywords ((interactive . "exclusive")) (constant ((type . "cd:name")) "")))) (command ((name . "disableinteractionmenu")) (sequence nil (string ((value . "disableinteractionmenu")) "")) (arguments nil (keywords ((interactive . "exclusive")) (constant ((type . "left")) "") (constant ((type . "right")) "") (constant ((type . "top")) "") (constant ((type . "bottom")) "") (constant ((type . "cd:name")) "")) (reference ((list . "yes")) ""))) (command ((name . "useexternaldocument")) (sequence nil (string ((value . "useexternaldocument")) "")) (arguments nil (keywords ((interactive . "exclusive")) (constant ((type . "cd:name")) "")) (keywords nil (constant ((type . "file")) "")) (keywords nil (constant ((type . "cd:text")) "")))) (command ((name . "useURL")) (sequence nil (string ((value . "useURL")) "")) (arguments nil (keywords ((interactive . "exclusive")) (constant ((type . "cd:name")) "")) (keywords nil (constant ((type . "cd:text")) "")) (keywords nil (constant ((type . "file")) "")) (keywords nil (constant ((type . "cd:text")) "")))) (command ((name . "coupledocument")) (sequence nil (string ((value . "coupledocument")) "")) (arguments nil (keywords ((interactive . "exclusive")) (constant ((type . "cd:name")) "")) (keywords nil (constant ((type . "file")) "")) (keywords nil (constant ((type . "cd:name")) "")))) (command ((name . "from")) (sequence nil (string ((value . "from")) "")) (arguments nil (reference ((interactive . "exclusive")) ""))) (command ((name . "interactionbar")) (sequence nil (string ((value . "interactionbar")) "")) (arguments nil (assignments ((interactive . "exclusive") (list . "yes")) (inherit ((name . "setupinteractionbar")) "")))) (command ((name . "interactionbuttons")) (sequence nil (string ((value . "interactionbuttons")) "")) (arguments nil (assignments ((interactive . "exclusive") (optional . "yes") (list . "yes")) (inherit ((name . "setupinteractionbar")) "")) (keywords ((list . "yes")) (constant ((type . "cd:name")) "")))) (command ((name . "setupinteractionbar")) (sequence nil (string ((value . "setupinteractionbar")) "")) (arguments nil (assignments ((interactive . "exclusive") (list . "yes")) (parameter ((name . "state")) (constant ((type . "start")) "") (constant ((type . "stop")) "")) (parameter ((name . "alternative")) (constant ((type . "a")) "") (constant ((type . "b")) "") (constant ((type . "c")) "") (constant ((type . "d")) "") (constant ((type . "e")) "") (constant ((type . "f")) "") (constant ((type . "g")) "")) (parameter ((name . "symbol")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "width")) (constant ((type . "cd:dimension")) "") (constant ((type . "hoogte")) "") (constant ((type . "fit")) "")) (parameter ((name . "height")) (constant ((type . "cd:dimension")) "") (constant ((type . "hoogte")) "") (constant ((type . "fit")) "")) (parameter ((name . "depth")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "color")) (constant ((type . "cd:name")) "")) (parameter ((name . "step")) (constant ((type . "cd:number")) "") (constant ((type . "small")) "") (constant ((type . "medium")) "") (constant ((type . "big")) "")) (inherit ((name . "setupframed")) "")))) (command ((name . "synchronize")) (sequence nil (string ((value . "synchronize")) ""))) (command ((name . "synchronization") (type . "environment")) (sequence nil (string ((value . "synchronization")) ""))) (command ((name . "setupsynchronizationbar")) (sequence nil (string ((value . "setupsynchronizationbar")) "")) (arguments nil (assignments ((interactive . "exclusive") (list . "yes")) (parameter ((name . "alternative")) (constant ((type . "page")) "") (constant ((type . "local")) "")) (parameter ((name . "width")) (constant ((type . "cd:dimension")) "") (constant ((type . "hoogte")) "") (constant ((type . "fit")) "")) (parameter ((name . "height")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "style")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) "")) (parameter ((name . "color")) (constant ((type . "cd:name")) "")) (inherit ((name . "setupframed")) "")))) (command ((name . "synchronizationbar")) (sequence nil (string ((value . "synchronizationbar")) "")) (arguments nil (keywords ((interactive . "exclusive")) (constant ((type . "cd:name")) "")) (assignments ((list . "yes")) (parameter ((name . "alternative")) (constant ((type . "page")) "") (constant ((type . "local")) "")) (inherit ((name . "setupsynchronizationbar")) "")))) (command ((name . "setupsynchronization")) (sequence nil (string ((value . "setupsynchronization")) "")) (arguments nil (assignments ((interactive . "exclusive") (list . "yes")) (parameter ((name . "state")) (constant ((type . "start")) "") (constant ((type . "stop")) ""))))) (command ((name . "defineprofile")) (sequence nil (string ((value . "defineprofile")) "")) (arguments nil (keywords ((interactive . "exclusive") (list . "yes")) (constant ((type . "cd:name")) "")) (keywords ((list . "yes")) (constant ((type . "cd:name")) "")))) (command ((name . "setupprofiles")) (sequence nil (string ((value . "setupprofiles")) "")) (arguments nil (assignments ((interactive . "exclusive") (list . "yes")) (parameter ((name . "option")) (constant ((type . "test")) ""))))) (command ((name . "profile") (type . "environment")) (sequence nil (string ((value . "profile")) "")) (arguments nil (keywords ((interactive . "exclusive") (list . "yes")) (constant ((type . "cd:name")) "")))) (command ((name . "followprofile")) (sequence nil (string ((value . "followprofile")) "")) (arguments nil (content ((interactive . "exclusive")) "") (keywords nil (constant ((type . "cd:text")) "")))) (command ((name . "placebookmarks")) (sequence nil (string ((value . "placebookmarks")) "")) (arguments nil (keywords ((optional . "yes") (list . "yes")) (constant ((type . "cd:name")) "")) (keywords ((optional . "yes") (list . "yes"))))) (command ((name . "bookmark")) (sequence nil (string ((value . "bookmark")) "")) (arguments nil (keywords ((optional . "yes")) (constant ((type . "cd:name")) "")) (content nil ""))) (command ((name . "version") (type . "environment")) (sequence nil (string ((value . "version")) "")) (arguments nil (keywords ((interactive . "exclusive") (list . "yes")) (constant ((type . "cd:number")) "")))) (command ((name . "setupversions")) (sequence nil (string ((value . "setupversions")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "number")) (constant ((type . "cd:number")) "")) (parameter ((name . "style")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "") (constant ((type . "cap")) "") (constant ((type . "small...")) "") (constant ((type . "cd:command")) ""))))) (command ((name . "markversion")) (sequence nil (string ((value . "markversion")) ""))) (command ((name . "selectversion")) (sequence nil (string ((value . "selectversion")) ""))) (command ((name . "defineversion")) (sequence nil (string ((value . "defineversion")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (keywords ((list . "yes")) (constant ((type . "cd:number")) "")))) (command ((name . "followversion")) (sequence nil (string ((value . "followversion")) "")) (arguments nil (content ((interactive . "exclusive")) "") (keywords nil (constant ((type . "cd:text")) "")))) (command ((name . "followprofileversion")) (sequence nil (string ((value . "followprofileversion")) "")) (arguments nil (content ((interactive . "exclusive")) "") (keywords nil (constant ((type . "cd:text")) "")) (keywords nil (constant ((type . "cd:name")) "")))) (command ((name . "defineprogram")) (sequence nil (string ((value . "defineprogram")) "")) (arguments nil (keywords ((interactive . "exclusive")) (constant ((type . "cd:name")) "")) (keywords nil (constant ((type . "cd:text")) "")) (keywords nil (constant ((type . "cd:text")) "")))) (command ((name . "setupprograms")) (sequence nil (string ((value . "setupprograms")) "")) (arguments nil (assignments ((interactive . "exclusive") (list . "yes")) (parameter ((name . "directory")) (constant ((type . "cd:text")) ""))))) (command ((name . "program")) (sequence nil (string ((value . "program")) "")) (arguments nil (keywords ((interactive . "exclusive")) (constant ((type . "cd:name")) "")))) (command ((name . "figure") (type . "environment")) (sequence nil (string ((value . "figure")) "")) (arguments nil (keywords ((interactive . "exclusive")) (constant ((type . "cd:name")) "")) (keywords nil (constant ((type . "cd:file")) "")) (assignments ((list . "yes")) (parameter ((name . "factor")) (constant ((type . "cd:number")) "")) (parameter ((name . "frame")) (constant ((type . "on")) "") (constant ((type . "off")) ""))))) (command ((name . "goto")) (sequence nil (string ((value . "goto")) "")) (arguments nil (content ((interactive . "exclusive")) "") (content ((interactive . "exclusive")) "") (reference ((list . "yes")) ""))) (command ((name . "gotobox")) (sequence nil (string ((value . "gotobox")) "")) (arguments nil (content ((interactive . "exclusive")) "") (reference ((list . "yes")) ""))) (command ((name . "button")) (sequence nil (string ((value . "button")) "")) (arguments nil (assignments ((interactive . "exclusive") (optional . "yes") (list . "yes")) (inherit ((name . "setupbuttons")) "")) (content nil "") (reference ((list . "yes")) ""))) (command ((name . "setupbuttons")) (sequence nil (string ((value . "setupbuttons")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "state")) (constant ((type . "start")) "") (constant ((type . "stop")) "")) (inherit ((name . "setupframed")) "")))) (command ((name . "setupcomment")) (sequence nil (string ((value . "setupcomment")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "state")) (constant ((type . "start")) "") (constant ((type . "stop")) "")) (parameter ((name . "width")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "height")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "color")) (constant ((type . "cd:name")) "")) (parameter ((name . "title")) (constant ((type . "cd:text")) "")) (parameter ((name . "space")) (constant ((type . "yes")) "") (constant ((type . "no")) "")) (parameter ((name . "symbol")) (constant ((type . "normal")) "") (constant ((type . "New")) "") (constant ((type . "Balloon")) "") (constant ((type . "Addition")) "") (constant ((type . "Help")) "") (constant ((type . "Paragraph")) "") (constant ((type . "Key")) "") (constant ((type . "cd:name")) "")) (parameter ((name . "option")) (constant ((type . "max")) "") (constant ((type . "buffer")) "")) (parameter ((name . "margin")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "distance")) (constant ((type . "cd:dimension")) ""))))) (command ((name . "comment") (type . "environment")) (sequence nil (string ((value . "comment")) "")) (arguments nil (keywords ((optional . "yes")) (constant ((type . "cd:name")) "")) (assignments ((optional . "yes") (list . "yes")) (inherit ((name . "setupcomment")) "")))) (command ((name . "comment")) (sequence nil (string ((value . "comment")) "")) (arguments nil (keywords ((optional . "yes")) (constant ((type . "cd:name")) "")) (assignments ((optional . "yes") (list . "yes")) (inherit ((name . "setupcomment")) "")) (content nil ""))) (command ((name . "definefield")) (sequence nil (string ((value . "definefield")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (keywords nil (constant ((type . "cd:name")) "")) (keywords nil (constant ((type . "cd:name")) "")) (keywords ((list . "yes")) (constant ((type . "cd:name")) "")) (keywords ((optional . "yes")) (constant ((type . "cd:name")) "")))) (command ((name . "definesubfield")) (sequence nil (string ((value . "definesubfield")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (keywords nil (constant ((type . "cd:name")) "")) (keywords ((list . "yes")) (constant ((type . "cd:name")) "")))) (command ((name . "copyfield")) (sequence nil (string ((value . "copyfield")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (keywords ((list . "yes")) (constant ((type . "cd:name")) "")))) (command ((name . "clonefield")) (sequence nil (string ((value . "clonefield")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (keywords ((list . "yes")) (constant ((type . "cd:name")) "")) (keywords nil (constant ((type . "cd:name")) "")) (keywords ((optional . "yes") (list . "yes")) (constant ((type . "cd:name")) "")))) (command ((name . "field")) (sequence nil (string ((value . "field")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")))) (command ((name . "fitfield")) (sequence nil (string ((value . "fitfield")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")))) (command ((name . "fillinfield")) (sequence nil (string ((value . "fillinfield")) "")) (arguments nil (keywords ((optional . "yes")) (constant ((type . "cd:text")) "")) (content nil ""))) (command ((name . "tooltip")) (sequence nil (string ((value . "tooltip")) "")) (arguments nil (keywords ((optional . "yes")) (constant ((type . "left")) "") (constant ((type . "right")) "") (constant ((type . "middle")) "")) (content nil "") (content nil ""))) (command ((name . "showfields")) (sequence nil (string ((value . "showfields")) "")) (arguments nil (keywords ((optional . "yes") (list . "yes")) (constant ((type . "cd:name")) "")))) (command ((name . "logfields")) (sequence nil (string ((value . "logfields")) ""))) (command ((name . "setupfield")) (sequence nil (string ((value . "setupfield")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (keywords ((list . "yes")) (constant ((type . "label")) "") (constant ((type . "horizontal")) "") (constant ((type . "vertical")) "") (constant ((type . "frame")) "")) (assignments ((list . "yes")) (inherit ((name . "setupfields")) "")) (assignments ((list . "yes"))) (assignments ((list . "yes"))))) (command ((name . "setupfields")) (sequence nil (string ((value . "setupfields")) "")) (arguments nil (keywords ((list . "yes")) (constant ((type . "cd:name")) "")) (keywords nil (constant ((type . "reset")) "") (constant ((type . "label")) "") (constant ((type . "horizontal")) "") (constant ((type . "vertical")) "") (constant ((type . "frame")) "")) (assignments ((list . "yes")) (parameter ((name . "n")) (constant ((type . "cd:number")) "")) (parameter ((name . "distance")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "before")) (constant ((type . "cd:command")) "")) (parameter ((name . "after")) (constant ((type . "cd:command")) "")) (parameter ((name . "inbetween")) (constant ((type . "cd:command")) "")) (parameter ((name . "color")) (constant ((type . "cd:name")) "")) (parameter ((name . "style")) (constant ((type . "normal")) "") (constant ((type . "bold")) "") (constant ((type . "slanted")) "") (constant ((type . "boldslanted")) "") (constant ((type . "type")) "")) (parameter ((name . "align")) (constant ((type . "left")) "") (constant ((type . "middle")) "") (constant ((type . "right")) "")) (parameter ((name . "option")) (constant ((type . "readonly")) "") (constant ((type . "required")) "") (constant ((type . "protected")) "") (constant ((type . "sorted")) "") (constant ((type . "unavailable")) "") (constant ((type . "hidden")) "") (constant ((type . "printable")) "")) (parameter ((name . "clickin")) (constant ((type . "cd:reference")) "")) (parameter ((name . "clickout")) (constant ((type . "cd:reference")) "")) (parameter ((name . "regionin")) (constant ((type . "cd:reference")) "")) (parameter ((name . "regionout")) (constant ((type . "cd:reference")) "")) (parameter ((name . "afterkey")) (constant ((type . "cd:reference")) "")) (parameter ((name . "format")) (constant ((type . "cd:reference")) "")) (parameter ((name . "validate")) (constant ((type . "cd:reference")) "")) (parameter ((name . "calculate")) (constant ((type . "cd:reference")) "")) (parameter ((name . "fieldoffset")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "fieldframecolor")) (constant ((type . "cd:name")) "")) (parameter ((name . "fieldbackgroundcolor")) (constant ((type . "cd:name")) "")) (inherit ((name . "framed")) "")) (assignments ((list . "yes"))) (assignments ((list . "yes"))))) (command ((name . "setupforms")) (sequence nil (string ((value . "setupforms")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "method")) (constant ((type . "HTML")) "") (constant ((type . "FDF")) ""))))) (command ((name . "definefieldstack")) (sequence nil (string ((value . "definefieldstack")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (keywords ((list . "yes")) (constant ((type . "cd:name")) "")) (assignments ((list . "yes")) (inherit ((name . "setupfields")) "")))) (command ((name . "fieldstack")) (sequence nil (string ((value . "fieldstack")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (keywords ((optional . "yes") (list . "yes")) (constant ((type . "cd:name")) "")) (assignments ((optional . "yes") (list . "yes")) (inherit ((name . "setupfields")) "")))) (command ((name . "clip")) (sequence nil (string ((value . "clip")) "")) (arguments nil (assignments ((optional . "yes") (list . "yes")) (inherit ((name . "setupclipping")) "")) (content nil ""))) (command ((name . "setupclipping")) (sequence nil (string ((value . "setupclipping")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "nx")) (constant ((type . "cd:number")) "")) (parameter ((name . "ny")) (constant ((type . "cd:number")) "")) (parameter ((name . "x")) (constant ((type . "cd:number")) "")) (parameter ((name . "y")) (constant ((type . "cd:number")) "")) (parameter ((name . "width")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "height")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "hoffset")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "voffset")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "mp")) (constant ((type . "cd:name")) ""))))) (command ((name . "placelegend")) (sequence nil (string ((value . "placelegend")) "")) (arguments nil (content nil "") (content nil ""))) (command ((name . "setuplegend")) (sequence nil (string ((value . "setuplegend")) "")) (arguments nil (assignments ((list . "yes")) (parameter ((name . "n")) (constant ((type . "cd:number")) "")) (parameter ((name . "distance")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "inbetween")) (constant ((type . "cd:command")) "")) (parameter ((name . "width")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "height")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "location")) (constant ((type . "right")) "") (constant ((type . "bottom")) "")) (parameter ((name . "bodyfont")) (constant ((type . "5pt")) "") (constant ((type . "...")) "") (constant ((type . "12pt")) "") (constant ((type . "small")) "") (constant ((type . "big")) ""))))) (command ((name . "definerule")) (sequence nil (string ((value . "definerule")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (assignments ((list . "yes")) (inherit ((name . "setuprule")) "")))) (command ((name . "placerule")) (sequence nil (string ((value . "placerule")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")))) (command ((name . "setuprule")) (sequence nil (string ((value . "setuprule")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (assignments ((list . "yes")) (parameter ((name . "depth")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "height")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "width")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "spacebefore")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "spaceafter")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "color")) (constant ((type . "cd:name")) ""))))) (command ((name . "definetextvariable")) (sequence nil (string ((value . "definetextvariable")) "")) (arguments nil (keywords nil (inherit ((name . "setuptextvariable")) "")) (keywords ((optional . "yes"))) (assignments ((optional . "yes") (list . "yes"))))) (command ((name . "setuptextvariable")) (sequence nil (string ((value . "setuptextvariable")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (assignments ((list . "yes")) (parameter ((name . "left")) (constant ((type . "cd:text")) "")) (parameter ((name . "right")) (constant ((type . "cd:text")) "")) (parameter ((name . "distance")) (constant ((type . "cd:dimension")) "")) (parameter ((name . "command")) (constant ((type . "cd:oneargument")) "")) (parameter ((name . "strut")) (constant ((type . "yes")) "") (constant ((type . "no")) "") (constant ((type . "cap")) "") (constant ((type . "cd:text")) ""))))) (command ((name . "settextvariable")) (sequence nil (string ((value . "settextvariable")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (keywords nil (constant ((type . "cd:text")) "")))) (command ((name . "placetextvariable")) (sequence nil (string ((value . "placetextvariable")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")))) (command ((name . "textvariable")) (sequence nil (string ((value . "textvariable")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")))) (command ((name . "definerawfont")) (sequence nil (string ((value . "definerawfont")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (keywords ((optional . "yes")) (constant ((type . "cd:file")) "")) (assignments ((optional . "yes") (list . "yes")) (inherit ((name . "setupinterlinespace")) "")))) (command ((name . "switchtorawfont")) (sequence nil (string ((value . "switchtorawfont")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")))) (command ((name . "definetextposition")) (sequence nil (string ((value . "definetextposition")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (assignments ((optional . "yes") (list . "yes")) (inherit ((name . "setuppositioning")) "")))) (command ((name . "setuptextposition")) (sequence nil (string ((value . "setuptextposition")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (assignments ((list . "yes")) (inherit ((name . "setuppositioning")) "")))) (command ((name . "positiontext")) (sequence nil (string ((value . "positiontext")) "")) (arguments nil (keywords nil (constant ((type . "cd:name")) "")) (content nil ""))) (command ((name . "setupstrut")) (sequence nil (string ((value . "setupstrut")) "")) (arguments nil (keywords nil (constant ((type . "yes") (default . "yes")) "") (constant ((type . "no")) "") (constant ((type . "cap")) "") (constant ((type . "cd:text")) "")))))
